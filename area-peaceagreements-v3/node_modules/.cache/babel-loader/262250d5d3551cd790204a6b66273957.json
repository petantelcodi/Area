{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\mcanet\\\\Downloads\\\\areaprototypedetail (1)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\mcanet\\\\Downloads\\\\areaprototypedetail (1)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\mcanet\\\\Downloads\\\\areaprototypedetail (1)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\mcanet\\\\Downloads\\\\areaprototypedetail (1)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\mcanet\\\\Downloads\\\\areaprototypedetail (1)\\\\src\\\\Block.jsx\";\nimport React from \"react\";\n\nvar Block = /*#__PURE__*/function (_React$Component) {\n  _inherits(Block, _React$Component);\n\n  var _super = _createSuper(Block);\n\n  function Block() {\n    var _this;\n\n    _classCallCheck(this, Block);\n\n    _this = _super.call(this);\n\n    _this.toggle = function () {\n      _this.setState(function (state, props) {\n        return {\n          active: !this.state.active\n        };\n      });\n    };\n\n    _this.state = {\n      active: false,\n      // Color list for coloring param2\n      colors: [\"#CC5151\", \"#51CCCC\", \"#8ECC51\", \"#8E51CC\", \"#CCAD51\", \"#51CC70\", \"#5170CC\", \"#CC51AD\", \"#CC7F51\", \"#BCCC51\", \"#60CC51\", \"#51CC9E\", \"#519ECC\", \"#6051CC\", \"#BC51CC\", \"#9E1452\", \"#CFA2B0\", \"#CC9651\", \"#4BEC4E\", \"#E8FA14\", \"#1170DD\", \"#E8B080\", \"#694C33\", \"#D8A0CD\", \"#803D73\", \"DA8E95\", \"#831E27\", \"#A7B6BC\", \"#143E4D\", \"#9CF69C\", \"#267826\", \"#D3E19B\", \"#646D40\", \"#757575\"]\n    };\n    return _this;\n  }\n\n  _createClass(Block, [{\n    key: \"render\",\n    // AgtId\n    // colourData -> array for the colours\n    //\n    value: function render() {\n      // Set color\n      var color = this.state.colors[0]; // Find position block\n\n      var index = this.props.index;\n      console.log('== index:', index, ' dim_block:', this.props.dim_block); //console.group('this.props.dim_block',this.props.dim_block);\n\n      var n = index / this.props.dim_block;\n      console.log('n:', n);\n      var my_x = 0;\n      console.log('n % 1', n % 1);\n\n      if (n % 1 === 0) {\n        my_x = 0;\n      } else {\n        my_x = my_x + this.props.blockWidth;\n      }\n\n      var my_y = Math.floor(n) * this.props.blockHeight;\n      console.log('my_x :', my_x);\n      console.log('my_y :', my_y); // Search filter in \n      // Render\n\n      return /*#__PURE__*/React.createElement(\"rect\", {\n        ref: 'block_' + this.props.item.id,\n        x: my_x,\n        y: my_y,\n        width: this.props.blockWidth,\n        height: this.props.blockHeight,\n        fill: color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return Block;\n}(React.Component);\n/* \r\n<div onClick={this.toggle}>\r\n        <div className={this.state.active ? \"active\" : null}>\r\n          {this.props.item.id}\r\n        </div>\r\n        {this.state.active && (\r\n          <pre>{JSON.stringify(this.props.item, null, 2)}</pre>\r\n        )}\r\n      </div>\r\n*/\n\n\nexport { Block as default };","map":{"version":3,"sources":["C:/Users/mcanet/Downloads/areaprototypedetail (1)/src/Block.jsx"],"names":["React","Block","toggle","setState","state","props","active","colors","color","index","console","log","dim_block","n","my_x","blockWidth","my_y","Math","floor","blockHeight","item","id","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,K;;;;;AACnB,mBAAc;AAAA;;AAAA;;AACZ;;AADY,UA4CdC,MA5Cc,GA4CL,YAAM;AACb,YAAKC,QAAL,CAAc,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AACnC,eAAO;AACLC,UAAAA,MAAM,EAAE,CAAC,KAAKF,KAAL,CAAWE;AADf,SAAP;AAGD,OAJD;AAKD,KAlDa;;AAEZ,UAAKF,KAAL,GAAa;AACXE,MAAAA,MAAM,EAAE,KADG;AAEX;AACAC,MAAAA,MAAM,EAAE,CACN,SADM,EAEN,SAFM,EAGN,SAHM,EAIN,SAJM,EAKN,SALM,EAMN,SANM,EAON,SAPM,EAQN,SARM,EASN,SATM,EAUN,SAVM,EAWN,SAXM,EAYN,SAZM,EAaN,SAbM,EAcN,SAdM,EAeN,SAfM,EAgBN,SAhBM,EAiBN,SAjBM,EAkBN,SAlBM,EAmBN,SAnBM,EAoBN,SApBM,EAqBN,SArBM,EAsBN,SAtBM,EAuBN,SAvBM,EAwBN,SAxBM,EAyBN,SAzBM,EA0BN,QA1BM,EA2BN,SA3BM,EA4BN,SA5BM,EA6BN,SA7BM,EA8BN,SA9BM,EA+BN,SA/BM,EAgCN,SAhCM,EAiCN,SAjCM,EAkCN,SAlCM;AAHG,KAAb;AAFY;AA0Cb;;;;AASD;AAEA;AAEA;6BACS;AACP;AACA,UAAIC,KAAK,GAAG,KAAKJ,KAAL,CAAWG,MAAX,CAAkB,CAAlB,CAAZ,CAFO,CAIP;;AACA,UAAIE,KAAK,GAAG,KAAKJ,KAAL,CAAWI,KAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAzB,EAA+B,aAA/B,EAA6C,KAAKJ,KAAL,CAAWO,SAAxD,EANO,CAOP;;AACA,UAAIC,CAAC,GAAGJ,KAAK,GAAI,KAAKJ,KAAL,CAAWO,SAA5B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBE,CAAlB;AACA,UAAIC,IAAI,GAAG,CAAX;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBE,CAAC,GAAG,CAAxB;;AACA,UAAKA,CAAC,GAAG,CAAJ,KAAU,CAAf,EAAmB;AACjBC,QAAAA,IAAI,GAAG,CAAP;AACD,OAFD,MAEK;AACHA,QAAAA,IAAI,GAAGA,IAAI,GAAG,KAAKT,KAAL,CAAWU,UAAzB;AACD;;AACD,UAAKC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAX,IAAgB,KAAKR,KAAL,CAAWc,WAAvC;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBG,IAArB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBK,IAArB,EAnBO,CAqBP;AAEA;;AACA,0BAAO;AAAM,QAAA,GAAG,EAAE,WAAS,KAAKX,KAAL,CAAWe,IAAX,CAAgBC,EAApC;AAAwC,QAAA,CAAC,EAAEP,IAA3C;AAAiD,QAAA,CAAC,EAAEE,IAApD;AAA2D,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWU,UAA7E;AAAyF,QAAA,MAAM,EAAE,KAAKV,KAAL,CAAWc,WAA5G;AAAyH,QAAA,IAAI,EAAEX,KAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAlFgCR,KAAK,CAACsB,S;AAsFzC;;;;;;;;;;;;SAtFqBrB,K","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Block extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      active: false,\r\n      // Color list for coloring param2\r\n      colors: [\r\n        \"#CC5151\",\r\n        \"#51CCCC\",\r\n        \"#8ECC51\",\r\n        \"#8E51CC\",\r\n        \"#CCAD51\",\r\n        \"#51CC70\",\r\n        \"#5170CC\",\r\n        \"#CC51AD\",\r\n        \"#CC7F51\",\r\n        \"#BCCC51\",\r\n        \"#60CC51\",\r\n        \"#51CC9E\",\r\n        \"#519ECC\",\r\n        \"#6051CC\",\r\n        \"#BC51CC\",\r\n        \"#9E1452\",\r\n        \"#CFA2B0\",\r\n        \"#CC9651\",\r\n        \"#4BEC4E\",\r\n        \"#E8FA14\",\r\n        \"#1170DD\",\r\n        \"#E8B080\",\r\n        \"#694C33\",\r\n        \"#D8A0CD\",\r\n        \"#803D73\",\r\n        \"DA8E95\",\r\n        \"#831E27\",\r\n        \"#A7B6BC\",\r\n        \"#143E4D\",\r\n        \"#9CF69C\",\r\n        \"#267826\",\r\n        \"#D3E19B\",\r\n        \"#646D40\",\r\n        \"#757575\"\r\n      ]\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(function(state, props) {\r\n      return {\r\n        active: !this.state.active\r\n      };\r\n    });\r\n  };\r\n  // AgtId\r\n\r\n  // colourData -> array for the colours\r\n\r\n  //\r\n  render() {\r\n    // Set color\r\n    var color = this.state.colors[0];\r\n\r\n    // Find position block\r\n    var index = this.props.index;\r\n    console.log('== index:', index,' dim_block:',this.props.dim_block );\r\n    //console.group('this.props.dim_block',this.props.dim_block);\r\n    var n = index /  this.props.dim_block;\r\n    console.log('n:', n );\r\n    var my_x = 0;\r\n    console.log('n % 1',n % 1);\r\n    if ( n % 1 === 0 ) {\r\n      my_x = 0;\r\n    }else{\r\n      my_x = my_x + this.props.blockWidth;\r\n    }\r\n    var  my_y = Math.floor(n) * this.props.blockHeight;\r\n    console.log('my_x :',my_x)\r\n    console.log('my_y :',my_y)\r\n    \r\n    // Search filter in \r\n\r\n    // Render\r\n    return <rect ref={'block_'+this.props.item.id} x={my_x} y={my_y}  width={this.props.blockWidth} height={this.props.blockHeight} fill={color} />;\r\n  }\r\n}\r\n\r\n\r\n/* \r\n<div onClick={this.toggle}>\r\n        <div className={this.state.active ? \"active\" : null}>\r\n          {this.props.item.id}\r\n        </div>\r\n        {this.state.active && (\r\n          <pre>{JSON.stringify(this.props.item, null, 2)}</pre>\r\n        )}\r\n      </div>\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}