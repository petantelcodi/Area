{"version":3,"sources":["Config.jsx","Block.jsx","Group.jsx","Groups.jsx","FilterList.jsx","FilterListColours.jsx","FilterForm.jsx","react-dropdown-tree-select/utils/dataset.js","react-dropdown-tree-select/utils/isEmpty.js","react-dropdown-tree-select/utils/isOutsideClick.js","react-dropdown-tree-select/utils/debounce.js","react-dropdown-tree-select/utils/generateUID.js","react-dropdown-tree-select/utils/findIndex.js","react-dropdown-tree-select/a11y/index.js","react-dropdown-tree-select/input/index.js","react-dropdown-tree-select/tag/index.js","react-dropdown-tree-select/tags/index.js","react-dropdown-tree-select/trigger/index.js","react-dropdown-tree-select/tree-node/action.js","react-dropdown-tree-select/tree-node/actions.js","react-dropdown-tree-select/checkbox/index.js","react-dropdown-tree-select/radio/index.js","react-dropdown-tree-select/tree-node/node-label.js","react-dropdown-tree-select/tree-node/toggle.js","react-dropdown-tree-select/tree-node/index.js","react-dropdown-tree-select/tree/index.js","react-dropdown-tree-select/tree-manager/getPartialState.js","react-dropdown-tree-select/tree-manager/flatten-tree.js","react-dropdown-tree-select/tree-manager/nodeVisitor.js","react-dropdown-tree-select/tree-manager/keyboardNavigation.js","react-dropdown-tree-select/tree-manager/index.js","react-dropdown-tree-select/index.js","SelectProperties.jsx","Area.jsx","App.js","index.js"],"names":["Config","MAX_DISTINC","AREAX","AREAY","COLORS_APPROACH","AREA_TITLE","PARAM1","PARAM2","START_TYPE_AREA","TYPE_AREA","name","value","DESCRIPTION","PA-Detailed","PA-Simple","CF-Detailed","CF-Simple","colorList","Block","_this","Object","classCallCheck","this","_super","call","toggle","setState","state","props","active","showData","obj","item","openPopupbox","filter","colors","index","my_x","columnsBlocks","blockWidth","my_y","Math","floor","blockHeight","foundFilter","param2","param2Value","colorArId","colorAr","color","react_default","a","createElement","onClick","className","ref","groupId","id","x","y","stroke","width","height","fill","x1","y1","x2","y2","React","Component","Group","_ref","items","rowsBlocks","map","Block_Block","key","Groups","param1","groupWidth","groupHeight","i","toString","length","position","src_Group","FilterList","keyStr","keys","FilterListColours","style","backgroundColor","border","FilterForm","handleChange","bind","assertThisInitialized","handleSubmit","event","target","onNewFilter","preventDefault","onSubmit","type","onChange","getDataset","o","arguments","undefined","reduce","acc","cur","str","concat","replace","toLowerCase","isEmpty","Array","isArray","isOutsideClick","e","node","Event","path","elem","parentElement","unshift","getPath","some","eventNode","debounce","func","wait","timeout","_len","args","_key","callNow","clearTimeout","setTimeout","apply","clientIdGenerator","prefix","counter","WeakMap","get","has","set","reset","generateUID","findIndex","arr","predicate","thisArg","prototype","TypeError","getAriaLabel","label","additionalLabelledBy","attributes","aria-labelledby","substring","aria-label","getAriaAttributeForLabel","trim","Input","handleInputChange","persist","delayedCallback","onInputChange","_this$props","inputRef","_this$props$texts","texts","onFocus","onBlur","disabled","readOnly","onKeyDown","activeDescendant","assign","placeholder","aria-activedescendant","aria-autocomplete","PureComponent","getTagId","Tag","handleClick","onDelete","stopPropagation","nativeEvent","stopImmediatePropagation","keyCode","onKeyUp","indexOf","_this$props2","labelRemove","tagId","Boolean","join","Tags","tags","onTagRemove","lastItem","children","tag","_id","tagClassName","dataset","src_react_dropdown_tree_select_tag","getTags","Trigger","getAriaAttributes","mode","showDropdown","clientId","triggerId","labelledBy","labelAttributes","push","forEach","t","objectSpread2","role","tabIndex","aria-haspopup","aria-expanded","handleTrigger","triggerNode","document","activeElement","onTrigger","_this2","dropdownTriggerClassname","Action","onAction","actionData","nodeId","action","title","text","defaultProps","Actions","actions","rest","objectWithoutProperties","idx","actionId","tree_node_action","refUpdater","checked","indeterminate","input","Checkbox","_this$props$indetermi","isDisabled","RadioButton","NodeLabel","handleCheckboxChange","onCheckboxChange","partial","_this$props3","expandOnly","showPartiallySelected","nodeLabelProps","sharedProps","htmlFor","react_dropdown_tree_select_radio","react_dropdown_tree_select_checkbox","Toggle","onToggle","onNodeToggle","expanded","isLeaf","toggleCx","aria-hidden","TreeNode","_children","_depth","keepTreeOnSearch","searchModeOn","liCx","keepChildrenOnSearch","matchInChildren","matchInParent","hide","focused","_focused","getNodeCx","paddingLeft","liId","node_label","tree_node_actions","shouldRenderNode","data","parent","_parent","Tree","componentWillReceiveProps","nextProps","hasSameActiveDescendant","computeInstanceProps","allVisibleNodes","slice","currentPage","pageSize","scrollableTarget","activeLi","getElementById","scrollTop","offsetTop","clientHeight","componentDidMount","parentNode","checkActiveDescendant","getNodes","totalPages","ceil","currentId","focusIndex","n","react_dropdown_tree_select_tree_node","hasMore","loadMore","nextItems","setNodeRef","aria-multiselectable","test","lib_default","dataLength","next","loader","identity","c","getPartialState","childProp","childSelector","flattenTree","tree","simple","radio","showPartialState","hierarchical","rootPrefixId","walkNodes","_ref2","nodes","_ref2$depth","depth","_ref2$_rv","_rv","list","Map","defaultValues","singleSelectedNode","single","isDefaultValue","stateProps","prop","setInitialStateProps","every","markSubTreeVisited","visited","getItemById","getNodesMatching","nodePredicate","nodeVisitor","getVisibleNodes","markSubTreeOnNonExpanded","Keys","NavActions","None","FocusPrevious","FocusNext","FocusParent","FocusFirst","FocusLast","ToggleExpanded","ToggleChecked","FocusActionNames","Set","validTriggerOpenKeys","validKeys","isMatchingEvent","currentFocus","nonFocusKey","getRelativeFocus","sortedNodes","prevFocus","focus","isEdgeTraverseAction","slicedToArray","nextIndex","getRelativeNeighborsFocus","keyboardNavigation","isValidKey","isOpen","getAction","getLeftNavAction","getRightNavAction","isFocusFirstEvent","isFocusLastEvent","getRelativeAction","getNextFocus","getNodeById","getParentFocus","isReverseTraverseAction","reverse","getNextFocusAfterTagDelete","deletedId","prevTags","fallback","newFocusId","focusNode","firstElementChild","handleFocusNavigationkey","newFocus","adjustFocusedProps","handleToggleNavigationkey","onToggleChecked","onToggleExpanded","TreeManager","searchPredicate","_src","simpleSelect","radioSelect","_flattenTree","JSON","parse","stringify","searchMaps","currentChecked","searchTerm","proximity","closestMatch","m","startsWith","matches","addOnMatch","_getAddOnMatch","addParentsToTree","_isMatch","ids","includes","addChildrenToTree","_this3","getMatches","matchTree","allNodesHidden","_this4","setNodeCheckedState","prevChecked","togglePreviousChecked","partialCheckParents","unCheckParents","toggleChildren","_this5","_this6","collapseChildren","_this7","_this8","isMatch","term","_this9","DropdownTreeSelect","initNewProps","treeManager","currentFocusNode","prevState","getTreeAndTags","resetSearchState","inlineSearchInput","searchInput","restoreNodes","callback","keepDropdownActive","addEventListener","handleOutsideClick","removeEventListener","_this$treeManager$fil","filterTree","isKeyboardEvent","toggleNodeExpandState","keepOpenOnSelect","clearSearchOnChange","_this$state","isSingleSelect","restoreDefaultValues","nextState","onInputFocus","onInputBlur","onCloseContent","onKeyboardKeyDown","_this$state2","tm","handleNavigationKey","lastTag","pop","_this$props4","_this$state3","commonProps","el","trigger","src_react_dropdown_tree_select_tags","Fragment","src","noMatches","react_dropdown_tree_select_tree","SelectProperties","selectedOption","updateParam","console","log","src_react_dropdown_tree_select","currentNode","selectedNodes","Area","update","updateParam1","updateParam2","areaTypeSelect","typeArea","getHumanFromID","output","config_filters","human","err","getDistincFromID","distincnum","createSelectJson","param","selectObj","catHierarchy_simple","catHierarchy","cat_hierarchy","totalItemsLevel1","j","totalItemsLevel2","h","objClean","Mentioned in this Agreement","content","PopupboxManager","open","config","titleBar","enable","overlayOpacity","fadeIn","fadeInSpeed","ar","k","sort","b","urlParam1","urlParam2","urlFilter","urlTypeArea","match","params","area_x","area_y","dataCFsim","dataPAsim","dataPA","dataCF","selectObjParam1","selectObjParam2","totalDataEntries","_","sortBy","dataWithId","addIdPropertyToAr","groupedByParam2","groupBy","count","groupedByParam1","groupedByParam1SortedBySize","ObjToArSortedBySize","totalFoundFilter","myObject","myObjectSorted","arSorted","ObjToAr","outAr","sortedAr","groupedByParam1SortedByName","totalGroups","columnsGroups","sqrt","fullRowsGroups","rowsGroups","widthGroups","heightGroups","maxBlocksInAGroup","fullRowsBlocks","widthBlocks","heightBlocks","react_router","to","SelectProperties_SelectProperties","src_FilterList","src_FilterListColours","FilterForm_FilterForm","src_Groups","react_popupbox","App","react_router_dom","exact","component","rootElement","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fbc511be.chunk.js","sourcesContent":["\r\nconst Config = {\r\n  MAX_DISTINC : 35,\r\n\tAREAX : 1000,\r\n\tAREAY : 740, \r\n\tCOLORS_APPROACH : \"fix\", // fix, random, gradient\r\n\tAREA_TITLE: \"PeaceAgreements.org\",\r\n  PARAM1 : \"Agtp\",\r\n  PARAM2 : \"Stage\",\r\n  START_TYPE_AREA:\"PA-Detailed\",\r\n  TYPE_AREA:[{name:\"PA-Detailed\",value:\"PA-Detailed\"},{name:\"PA-Simple\",value:\"PA-Simple\"},{name:\"CF-Detailed\",value:\"CF-Detailed\"},{name:\"CF-Simple\",value:\"CF-Simple\"}],\r\n  DESCRIPTION:{\r\n    \"PA-Detailed\":\"PA: showing all Peace Agreements (detailled view with 65536 possible diagrams)\",\r\n    \"PA-Simple\":\"PAsim: showing all Peace Agreements (simple view with 36 possible diagrams)\",\r\n    \"CF-Detailed\":\"CF: showing all Cease Fire agreements (detailled view with 65536 possible diagrams)\",\r\n    \"CF-Simple\":\"CFsim: showing all Cease Fire agreements (simple view with 36 possible diagrams)\",\r\n  },  \r\n  colorList:[\r\n    \"#CC5151\",\r\n    \"#51CCCC\",\r\n    \"#8ECC51\",\r\n    \"#8E51CC\",\r\n    \"#CCAD51\",\r\n    \"#51CC70\",\r\n    \"#5170CC\",\r\n    \"#CC51AD\",\r\n    \"#CC7F51\",\r\n    \"#BCCC51\",\r\n    \"#60CC51\",\r\n    \"#51CC9E\",\r\n    \"#519ECC\",\r\n    \"#6051CC\",\r\n    \"#BC51CC\",\r\n    \"#9E1452\",\r\n    \"#CFA2B0\",\r\n    \"#CC9651\",\r\n    \"#4BEC4E\",\r\n    \"#E8FA14\",\r\n    \"#1170DD\",\r\n    \"#E8B080\",\r\n    \"#694C33\",\r\n    \"#D8A0CD\",\r\n    \"#803D73\",\r\n    \"#DA8E95\",\r\n    \"#831E27\",\r\n    \"#A7B6BC\",\r\n    \"#143E4D\",\r\n    \"#9CF69C\",\r\n    \"#267826\",\r\n    \"#D3E19B\",\r\n    \"#646D40\",\r\n    \"#757575\"\r\n  ]\r\n}\r\n\r\nexport default Config;","import React from \"react\";\r\n//import Color from \"color\";\r\nimport Config from \"./Config\"\r\n\r\nexport default class Block extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      active: false,\r\n      filter: '',\r\n      // Color list for coloring param2\r\n      colors: Config.colorList\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(function(state, props) {\r\n      return {\r\n        active: !this.state.active\r\n      };\r\n    });\r\n  };\r\n\r\n  // AgtId\r\n  // colourData -> array for the colours\r\n\r\n  showData = () =>{\r\n    //alert(JSON.stringify(this.props.items));\r\n    //console.log(JSON.stringify(this.props.items));\r\n    //console.log(this.props.item);\r\n    var obj = this.props.item;\r\n    \r\n    this.props.openPopupbox(obj);\r\n  }\r\n\r\n  render() {\r\n    \r\n    // Find position block\r\n    var index = this.props.index;\r\n    var my_x = (index%this.props.columnsBlocks)*this.props.blockWidth; \r\n    var  my_y =  Math.floor(index/this.props.columnsBlocks) * this.props.blockHeight;  \r\n    //console.log(index,'rowsBlocks',this.props.rowsBlocks,'columnsBlocks',this.props.columnsBlocks,'my_x :',my_x,'my_y :',my_y);\r\n    \r\n    // Search filter in\r\n    var foundFilter = this.props.item.foundFilter; //false;\r\n\r\n    // Set color\r\n    var param2 = this.props.param2;\r\n    var param2Value = this.props.item[param2];\r\n    //console.log('param2Value:',param2Value);\r\n    //console.log('this.props.colourData:',this.props.colourData);\r\n    //console.log('this.props.colorAr:',this.props.colorAr);\r\n    var colorArId = this.props.colorAr[param2Value]-1;\r\n    //console.log('colorArId: ',colorArId);\r\n    var color = this.state.colors[colorArId];\r\n    //var colorFilter =  '#CCCCCC';\r\n   \r\n    //var opacity = 1;\r\n    // Makes lighter the ones not selected\r\n    if(!foundFilter && this.props.filter!==\"\"){\r\n      //color = Color(color).alpha(0.8).lighten(0.5).hex();\r\n      //opacity = 0.5;\r\n      //color = colorFilter;\r\n    }\r\n    // Render\r\n    return <g onClick={this.showData} className=\"block\">\r\n      <rect ref={'block_rect_'+this.props.groupId+'_'+this.props.item.id} x={my_x} y={my_y} stroke=\"#000000\"   width={this.props.blockWidth} height={this.props.blockHeight} fill={color}  />\r\n      {foundFilter && this.props.filter!==\"\"?<g><line x1={my_x} y1={my_y} x2={my_x+this.props.blockWidth} y2={my_y+this.props.blockHeight} className=\"lineBlockCross\" /><line x1={my_x} y1={my_y+this.props.blockHeight} x2={my_x+this.props.blockWidth} y2={my_y} className=\"lineBlockCross\"  /></g>:null}\r\n      </g>;\r\n  }\r\n}\r\n\r\n","import React from \"react\";\r\nimport Block from \"./Block\";\r\n\r\nconst Group = ({ items,colorAr, param2, filter, blockWidth, blockHeight,  columnsBlocks, rowsBlocks, openPopupbox,groupId }) => (\r\n  <g>\r\n    {items.map((item, index) => (\r\n      <Block\r\n        item={item}\r\n        colorAr={colorAr}\r\n        param2={param2}\r\n        filter={filter}\r\n        blockWidth={blockWidth}\r\n        blockHeight={blockHeight}\r\n        key={\"block_\" + item.id}\r\n        index={index}\r\n        columnsBlocks={columnsBlocks}\r\n        rowsBlocks={rowsBlocks}\r\n        openPopupbox={openPopupbox}\r\n        groupId={groupId}\r\n      />\r\n    ))}\r\n  </g>\r\n);\r\n//dim_block={dim_block}\r\n//groupWidth={groupWidth}\r\nexport default Group;\r\n","import React from \"react\";\r\nimport Group from \"./Group\";\r\n//import MaskLines from \"./MaskLines\";\r\n\r\n//<LinesMask/>\r\nconst Groups = ({ items, colorAr, param1, param2, filter, groupWidth, groupHeight, blockWidth, blockHeight, columnsBlocks,rowsBlocks, openPopupbox }) => (\r\n  <div id=\"AreaGroups\">\r\n    {items.map((item, i) => (\r\n      <div id={\"group_\"+i.toString()} key={\"group_\"+i.toString()} className=\"group\">\r\n        <div className=\"titleGroups\">{item.key} <span className=\"titleGroupNumbers\">[{item.value.length}]</span></div>\r\n        <svg width={groupWidth} height={groupHeight} id={\"#svg_group_\"+i.toString()} position=\"relative\">\r\n          <Group\r\n          items={item.value} \r\n          colorAr={colorAr}\r\n          param2={param2}\r\n          filter={filter} \r\n          blockWidth={blockWidth} \r\n          blockHeight={blockHeight}          \r\n          columnsBlocks={columnsBlocks}\r\n          rowsBlocks={rowsBlocks}\r\n          openPopupbox={openPopupbox}\r\n          groupId={i}\r\n          />   \r\n        </svg>     \r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n//groupWidth={groupWidth}\r\nexport default Groups;","import React from \"react\";\r\n\r\nconst FilterList = ({ items, keyStr }) => (\r\n  <div>\r\n    {Object.keys(items).map((obj, i) => (\r\n      <div key={keyStr+i.toString()} className=\"filterSelectProperties\">{obj}</div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default FilterList;","import React from \"react\";\r\nimport Config from \"./Config\"\r\n\r\nconst FilterListColours = ({ items, keyStr }) => (\r\n  <div>\r\n    {Object.keys(items).map((obj, i) => (\r\n      <div key={keyStr+i.toString()} className=\"filterSelectProperties\" style={{'backgroundColor':Config.colorList[i],'border':'none'}}>{obj}</div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default FilterListColours;","import React from \"react\";\r\n\r\nexport default class FilterForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: ''};\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n      this.setState({value:this.props.filter});\r\n    }\r\n \r\n    handleChange(event) {\r\n      //console.log(\"== Change form:\"+event.target.value);\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      this.props.onNewFilter(this.state.value);\r\n      event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n      //console.log('== render form filter');\r\n      return (\r\n     \r\n        <form className=\"inputFilterForm\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            \r\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input type=\"submit\" value=\"Filter\" />\r\n        </form>\r\n        \r\n      );\r\n    }\r\n  }\r\n  ","const toKebabCase = str => str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\r\n\r\nconst getDataset = (o = {}) =>\r\n  Object.keys(o).reduce((acc, cur) => {\r\n    acc[`data-${toKebabCase(cur)}`] = o[cur]\r\n    return acc\r\n  }, {})\r\n\r\nexport default getDataset\r\n","/**\r\n * Simplified implmentation of isEmpty.\r\n * Note: This is not complete and will return false positives for empty objects and likes.\r\n * However, it suffices for the limited use-case of this project.\r\n */\r\nconst isEmpty = o => !o || (Array.isArray(o) && !o.length)\r\n\r\nexport default isEmpty\r\n","const getPath = e => {\r\n  if (e.path) return e.path\r\n\r\n  let elem = e.target\r\n  const path = [elem]\r\n\r\n  while (elem.parentElement) {\r\n    elem = elem.parentElement\r\n    path.unshift(elem)\r\n  }\r\n\r\n  return path\r\n}\r\n\r\nexport default (e, node) => {\r\n  if (!(e instanceof Event)) return false\r\n  return !getPath(e).some(eventNode => eventNode === node)\r\n}\r\n","/**\r\n * Modified debounce that always invokes on leading edge\r\n * See unmodified: https://gist.github.com/mrchief/a7e8938ee96774f05644905b37f09536\r\n */\r\nexport default (func, wait) => {\r\n  let timeout\r\n\r\n  return (...args) => {\r\n    const later = () => {\r\n      timeout = null\r\n      func(...args)\r\n    }\r\n\r\n    // timeout will be undefined the first time (leading edge)\r\n    // so the callback will get executed once on leading edge\r\n    const callNow = !timeout\r\n\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(later, wait)\r\n\r\n    if (callNow) func(...args)\r\n  }\r\n}\r\n","const generateUID = prefix => {\r\n  let counter = 1\r\n\r\n  let map = new WeakMap()\r\n\r\n  const get = item => {\r\n    if (!map.has(item)) {\r\n      map.set(item, counter++)\r\n    }\r\n    return `${prefix}${map.get(item)}`\r\n  }\r\n\r\n  const reset = () => {\r\n    map = new WeakMap()\r\n    counter = 1\r\n  }\r\n\r\n  return { get, reset }\r\n}\r\n\r\nconst clientIdGenerator = generateUID('rdts')\r\nexport default clientIdGenerator\r\n","function findIndex(arr, predicate, thisArg) {\r\n  // if native support is available, ship it off\r\n  if (Array.prototype.findIndex) {\r\n    return arr.findIndex(predicate, thisArg)\r\n  }\r\n\r\n  if (!arr) {\r\n    throw new TypeError('findIndex called on null or undefined')\r\n  }\r\n  if (typeof predicate !== 'function') {\r\n    throw new TypeError('findIndex predicate must be a function')\r\n  }\r\n\r\n  for (var i = 0; i < arr.length; i++) {\r\n    let value = arr[i]\r\n    if (predicate.call(thisArg, value, i, arr)) {\r\n      return i\r\n    }\r\n  }\r\n  return -1\r\n}\r\nexport default findIndex\r\n","export function getAriaLabel(label, additionalLabelledBy) {\r\n  const attributes = getAriaAttributeForLabel(label)\r\n\r\n  if (additionalLabelledBy) {\r\n    attributes['aria-labelledby'] = `${attributes['aria-labelledby'] || ''} ${additionalLabelledBy}`.trim()\r\n  }\r\n\r\n  return attributes\r\n}\r\n\r\nfunction getAriaAttributeForLabel(label) {\r\n  if (!label) return {}\r\n\r\n  /* See readme for label. When label starts with # it references ids of dom nodes instead.\r\n    When used on aria-labelledby, they should be referenced without a starting hash/# */\r\n  if (label[0] === '#') {\r\n    return { 'aria-labelledby': label.substring(1).replace(/ #/g, ' ') }\r\n  }\r\n  return { 'aria-label': label }\r\n}\r\n","import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { debounce } from '../utils'\r\nimport { getAriaLabel } from '../a11y'\r\n\r\nclass Input extends PureComponent {\r\n  static propTypes = {\r\n    tags: PropTypes.array,\r\n    texts: PropTypes.object,\r\n    onInputChange: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onBlur: PropTypes.func,\r\n    onTagRemove: PropTypes.func,\r\n    onKeyDown: PropTypes.func,\r\n    inputRef: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    activeDescendant: PropTypes.string,\r\n    inlineSearchInput: PropTypes.bool,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.delayedCallback = debounce(e => this.props.onInputChange(e.target.value), 300)\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    e.persist()\r\n    this.delayedCallback(e)\r\n  }\r\n\r\n  render() {\r\n    const { inputRef, texts = {}, onFocus, onBlur, disabled, readOnly, onKeyDown, activeDescendant } = this.props\r\n\r\n    return (\r\n      <div className=\"searchContainer\">\r\n        <input\r\n        type=\"text\"\r\n        disabled={disabled}\r\n        ref={inputRef}\r\n        className=\"search\"\r\n        placeholder={texts.placeholder || 'Choose...'}\r\n        onKeyDown={onKeyDown}\r\n        onChange={this.handleInputChange}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        readOnly={readOnly}\r\n        aria-activedescendant={activeDescendant}\r\n        aria-autocomplete={onKeyDown ? 'list' : undefined}\r\n        {...getAriaLabel(texts.label)}\r\n      />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Input\r\n","import PropTypes from 'prop-types'\r\nimport React, { PureComponent } from 'react'\r\n\r\nimport './index.css'\r\n\r\nexport const getTagId = id => `${id}_tag`\r\n\r\nclass Tag extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func,\r\n    readOnly: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    labelRemove: PropTypes.string,\r\n  }\r\n\r\n  handleClick = e => {\r\n    const { id, onDelete } = this.props\r\n    e.stopPropagation()\r\n    e.nativeEvent.stopImmediatePropagation()\r\n    onDelete(id, (e.key || e.keyCode) !== undefined)\r\n  }\r\n\r\n  onKeyDown = e => {\r\n    if (e.key === 'Backspace') {\r\n      this.handleClick(e)\r\n      e.preventDefault()\r\n    }\r\n  }\r\n\r\n  onKeyUp = e => {\r\n    if (e.keyCode === 32 || ['Delete', 'Enter'].indexOf(e.key) > -1) {\r\n      this.handleClick(e)\r\n      e.preventDefault()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, label, labelRemove = 'Remove', readOnly, disabled } = this.props\r\n\r\n    const tagId = getTagId(id)\r\n    const buttonId = `${id}_button`\r\n    const className = ['tag-remove', readOnly && 'readOnly', disabled && 'disabled'].filter(Boolean).join(' ')\r\n    const isDisabled = readOnly || disabled\r\n\r\n    /*\r\n    <button\r\n          id={buttonId}\r\n          onClick={!isDisabled ? this.handleClick : undefined}\r\n          onKeyDown={!isDisabled ? this.onKeyDown : undefined}\r\n          onKeyUp={!isDisabled ? this.onKeyUp : undefined}\r\n          className={className}\r\n          type=\"button\"\r\n          aria-label={labelRemove}\r\n          aria-labelledby={`${buttonId} ${tagId}`}\r\n          aria-disabled={isDisabled}\r\n        >\r\n          x\r\n        </button>\r\n    */\r\n    return (\r\n      <span className=\"tag\" id={tagId} aria-label={label}>\r\n        {label}\r\n        \r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tag\r\n","import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Tag from '../tag'\r\nimport { getDataset } from '../utils'\r\n\r\nimport './index.css'\r\n\r\nconst getTags = (tags = [], onDelete, readOnly, disabled, labelRemove) =>\r\n  tags.map(tag => {\r\n    const { _id, label, tagClassName, dataset } = tag\r\n    return (\r\n      <li\r\n        className={['tag-item', tagClassName].filter(Boolean).join(' ')}\r\n        key={`tag-item-${_id}`}\r\n        {...getDataset(dataset)}\r\n      >\r\n        <Tag\r\n          label={label}\r\n          id={_id}\r\n          onDelete={onDelete}\r\n          readOnly={readOnly}\r\n          disabled={disabled || tag.disabled}\r\n          labelRemove={labelRemove}\r\n        />\r\n      </li>\r\n    )\r\n  })\r\n\r\nclass Tags extends PureComponent {\r\n  static propTypes = {\r\n    tags: PropTypes.array,\r\n    onTagRemove: PropTypes.func,\r\n    readOnly: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    texts: PropTypes.object,\r\n    children: PropTypes.node,\r\n  }\r\n\r\n  render() {\r\n    const { tags, onTagRemove, texts = {}, disabled, readOnly, children } = this.props\r\n    const lastItem = children || <span className=\"placeholder\">{texts.placeholder || 'Choose...'}</span>\r\n\r\n    return (\r\n      <ul className=\"tag-list\">\r\n        {getTags(tags, onTagRemove, readOnly, disabled, texts.labelRemove)}\r\n        <li className=\"tag-item\">{lastItem}</li>\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tags\r\n","import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { getAriaLabel } from '../a11y'\r\nimport { getTagId } from '../tag'\r\n\r\nclass Trigger extends PureComponent {\r\n  static propTypes = {\r\n    onTrigger: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    showDropdown: PropTypes.bool,\r\n    mode: PropTypes.oneOf(['multiSelect', 'simpleSelect', 'radioSelect', 'hierarchical']),\r\n    texts: PropTypes.object,\r\n    clientId: PropTypes.string,\r\n    tags: PropTypes.array,\r\n  }\r\n\r\n  getAriaAttributes = () => {\r\n    const { mode, texts = {}, showDropdown, clientId, tags } = this.props\r\n\r\n    const triggerId = `${clientId}_trigger`\r\n    const labelledBy = []\r\n    let labelAttributes = getAriaLabel(texts.label)\r\n    if (tags && tags.length) {\r\n      if (labelAttributes['aria-label']) {\r\n        // Adds reference to self when having aria-label\r\n        labelledBy.push(triggerId)\r\n      }\r\n      tags.forEach(t => {\r\n        labelledBy.push(getTagId(t._id))\r\n      })\r\n      labelAttributes = getAriaLabel(texts.label, labelledBy.join(' '))\r\n    }\r\n\r\n    const attributes = {\r\n      id: triggerId,\r\n      role: 'button',\r\n      tabIndex: 0,\r\n      'aria-haspopup': mode === 'simpleSelect' ? 'listbox' : 'tree',\r\n      'aria-expanded': showDropdown ? 'true' : 'false',\r\n      ...labelAttributes,\r\n    }\r\n\r\n    return attributes\r\n  }\r\n\r\n  handleTrigger = e => {\r\n    // Just return if triggered from keyDown and the key isn't enter, space or arrow down\r\n    if (e.key && e.keyCode !== 13 && e.keyCode !== 32 && e.keyCode !== 40) {\r\n      return\r\n    } else if (e.key && this.triggerNode && this.triggerNode !== document.activeElement) {\r\n      // Do not trigger if not activeElement\r\n      return\r\n    } else if (!this.props.showDropdown && e.keyCode === 32) {\r\n      // Avoid adding space to input on open\r\n      e.preventDefault()\r\n    }\r\n\r\n    // Else this is a key press that should trigger the dropdown\r\n    this.props.onTrigger(e)\r\n  }\r\n\r\n  render() {\r\n    const { disabled, readOnly, showDropdown } = this.props\r\n\r\n    const dropdownTriggerClassname = [\r\n      'dropdown-trigger',\r\n      'arrow',\r\n      disabled && 'disabled',\r\n      readOnly && 'readOnly',\r\n      showDropdown && 'top',\r\n      !showDropdown && 'bottom',\r\n    ]\r\n      .filter(Boolean)\r\n      .join(' ')\r\n\r\n    return (\r\n      <a\r\n        ref={node => {\r\n          this.triggerNode = node\r\n        }}\r\n        className={dropdownTriggerClassname}\r\n        onClick={!disabled ? this.handleTrigger : undefined}\r\n        onKeyDown={!disabled ? this.handleTrigger : undefined}\r\n        {...this.getAriaAttributes()}\r\n      >\r\n        {this.props.children}\r\n      </a>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Trigger\r\n","import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Action extends PureComponent {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    text: PropTypes.string,\r\n    className: PropTypes.string,\r\n    actionData: PropTypes.object,\r\n    onAction: PropTypes.func,\r\n    readOnly: PropTypes.bool,\r\n  }\r\n\r\n  static defaultProps = {\r\n    onAction: () => {},\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { onAction, actionData } = this.props\r\n    if (onAction) {\r\n      onAction(actionData.nodeId, actionData.action)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, className, text, readOnly } = this.props\r\n\r\n    return (\r\n      <i title={title} className={className} onClick={!readOnly ? this.handleClick : undefined}>\r\n        {text}\r\n      </i>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Action\r\n","import PropTypes from 'prop-types'\r\nimport React, { PureComponent } from 'react'\r\n\r\nimport Action from './action'\r\nimport { isEmpty } from '../utils'\r\n\r\nclass Actions extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    actions: PropTypes.array,\r\n  }\r\n\r\n  render() {\r\n    const { actions, id, ...rest } = this.props\r\n\r\n    if (isEmpty(actions)) return null\r\n\r\n    return actions.map((a, idx) => {\r\n      const actionId = a.id || `action-${idx}`\r\n      return <Action key={actionId} {...rest} {...a} actionData={{ action: { ...a, id: actionId }, nodeId: id }} />\r\n    })\r\n  }\r\n}\r\n\r\nexport default Actions\r\n","import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const refUpdater = ({ checked, indeterminate }) => input => {\r\n  if (input) {\r\n    input.checked = checked\r\n    input.indeterminate = indeterminate\r\n  }\r\n}\r\n\r\nclass Checkbox extends PureComponent {\r\n  static propTypes = {\r\n    checked: PropTypes.bool,\r\n    indeterminate: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n  }\r\n\r\n  render() {\r\n    const { checked, indeterminate = false, onChange, disabled, readOnly, ...rest } = this.props\r\n\r\n    const isDisabled = disabled || readOnly\r\n\r\n    return (\r\n      <input\r\n        type=\"checkbox\"\r\n        ref={refUpdater({ checked, indeterminate })}\r\n        onChange={onChange}\r\n        disabled={isDisabled}\r\n        {...rest}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Checkbox\r\n","import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const refUpdater = ({ checked }) => input => {\r\n  if (input) {\r\n    input.checked = checked\r\n  }\r\n}\r\n\r\nclass RadioButton extends PureComponent {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n  }\r\n\r\n  render() {\r\n    const { name, checked, onChange, disabled, readOnly, ...rest } = this.props\r\n\r\n    const isDisabled = disabled || readOnly\r\n\r\n    return (\r\n      <input\r\n        type=\"radio\"\r\n        name={name}\r\n        ref={refUpdater({ checked })}\r\n        onChange={onChange}\r\n        disabled={isDisabled}\r\n        {...rest}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default RadioButton\r\n","import PropTypes from 'prop-types'\r\nimport React, { PureComponent } from 'react'\r\nimport Checkbox from '../checkbox'\r\nimport RadioButton from '../radio'\r\n\r\nclass NodeLabel extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    actions: PropTypes.array,\r\n    title: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool,\r\n    partial: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    expandOnly: PropTypes.bool,\r\n    dataset: PropTypes.object,\r\n    mode: PropTypes.oneOf(['multiSelect', 'simpleSelect', 'radioSelect', 'hierarchical']),\r\n    showPartiallySelected: PropTypes.bool,\r\n    onCheckboxChange: PropTypes.func,\r\n    readOnly: PropTypes.bool,\r\n    clientId: PropTypes.string,\r\n  }\r\n\r\n  handleCheckboxChange = e => {\r\n    const { mode, id, onCheckboxChange } = this.props\r\n\r\n    if (mode === 'simpleSelect' || mode === 'radioSelect') {\r\n      onCheckboxChange(id, true)\r\n    } else {\r\n      const {\r\n        target: { checked },\r\n      } = e\r\n      onCheckboxChange(id, checked)\r\n    }\r\n    e.stopPropagation()\r\n    e.nativeEvent.stopImmediatePropagation()\r\n  }\r\n\r\n  render() {\r\n    const { mode, title, label, id, partial, checked } = this.props\r\n    const { value, disabled, expandOnly, showPartiallySelected, readOnly, clientId } = this.props\r\n    const nodeLabelProps = { className: 'node-label' }\r\n\r\n    // in case of simple select mode, there is no checkbox, so we need to handle the click via the node label\r\n    // but not if the control is in readOnly or disabled state\r\n    const shouldRegisterClickHandler = mode === 'simpleSelect' && !readOnly && !disabled\r\n\r\n    if (shouldRegisterClickHandler) {\r\n      nodeLabelProps.onClick = this.handleCheckboxChange\r\n    }\r\n\r\n    const sharedProps = { id, value, checked, disabled, readOnly, tabIndex: -1 }\r\n    const className = ['checkbox-item', mode === 'simpleSelect' && 'simple-select'].filter(Boolean).join(' ')\r\n\r\n    return (\r\n      <label title={title || label} htmlFor={id}>\r\n        {!expandOnly ? (\r\n          <span>\r\n            {mode === 'radioSelect' ? (\r\n              <RadioButton\r\n                name={clientId}\r\n                className=\"radio-item\"\r\n                onChange={this.handleCheckboxChange}\r\n                {...sharedProps}\r\n              />\r\n            ) : (\r\n              <Checkbox\r\n                name={id}\r\n                className={className}\r\n                indeterminate={showPartiallySelected && partial}\r\n                onChange={this.handleCheckboxChange}\r\n                {...sharedProps}\r\n              />\r\n            )}\r\n          </span>\r\n        ) : null}\r\n        <span {...nodeLabelProps} onClick={this.handleCheckboxChange}>{label}</span>\r\n      </label>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NodeLabel\r\n","import PropTypes from 'prop-types'\r\nimport React, { PureComponent } from 'react'\r\n\r\nclass Toggle extends PureComponent {\r\n  static propTypes = {\r\n    expanded: PropTypes.bool,\r\n    isLeaf: PropTypes.bool,\r\n    onNodeToggle: PropTypes.func,\r\n    id: PropTypes.string,\r\n  }\r\n\r\n  onToggle = e => {\r\n    e.stopPropagation()\r\n    e.nativeEvent.stopImmediatePropagation()\r\n    this.props.onNodeToggle(this.props.id)\r\n  }\r\n\r\n  onKeyDown = e => {\r\n    if (e.key === 'Enter' || e.keyCode === 32) {\r\n      this.props.onNodeToggle(this.props.id)\r\n      e.preventDefault()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { expanded, isLeaf } = this.props\r\n    if (isLeaf) return null\r\n\r\n    const toggleCx = ['toggle', expanded && 'expanded', !expanded && 'collapsed'].filter(Boolean).join(' ')\r\n    return (\r\n      <i\r\n        role=\"button\"\r\n        tabIndex={-1}\r\n        className={toggleCx}\r\n        onClick={this.onToggle}\r\n        onKeyDown={this.onKeyDown}\r\n        aria-hidden\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Toggle\r\n","import PropTypes from 'prop-types'\r\nimport React, { PureComponent } from 'react'\r\n\r\nimport { getDataset, isEmpty } from '../utils'\r\nimport Actions from './actions'\r\nimport NodeLabel from './node-label'\r\nimport Toggle from './toggle'\r\n\r\nimport './index.css'\r\n\r\nconst isLeaf = children => isEmpty(children)\r\n\r\nconst getNodeCx = props => {\r\n  const {\r\n    keepTreeOnSearch,\r\n    keepChildrenOnSearch,\r\n    _children,\r\n    matchInChildren,\r\n    matchInParent,\r\n    disabled,\r\n    expandOnly,\r\n    partial,\r\n    hide,\r\n    className,\r\n    showPartiallySelected,\r\n    readOnly,\r\n    checked,\r\n    _focused: focused,\r\n  } = props\r\n\r\n  return [\r\n    'node',\r\n    isLeaf(_children) && 'leaf',\r\n    !isLeaf(_children) && 'tree',\r\n    disabled && 'disabled',\r\n    expandOnly && 'expandOnly',\r\n    hide && 'hide',\r\n    keepTreeOnSearch && matchInChildren && 'match-in-children',\r\n    keepTreeOnSearch && keepChildrenOnSearch && matchInParent && 'match-in-parent',\r\n    showPartiallySelected && partial && 'partial',\r\n    readOnly && 'readOnly',\r\n    checked && 'checked',\r\n    focused && 'focused',\r\n    className,\r\n  ]\r\n    .filter(Boolean)\r\n    .join(' ')\r\n}\r\n\r\nclass TreeNode extends PureComponent {\r\n  static propTypes = {\r\n    _id: PropTypes.string.isRequired,\r\n    _depth: PropTypes.number,\r\n    _children: PropTypes.array,\r\n    actions: PropTypes.array,\r\n    className: PropTypes.string,\r\n    title: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool,\r\n    expanded: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    expandOnly: PropTypes.bool,\r\n    partial: PropTypes.bool,\r\n    dataset: PropTypes.object,\r\n    keepTreeOnSearch: PropTypes.bool,\r\n    keepChildrenOnSearch: PropTypes.bool,\r\n    searchModeOn: PropTypes.bool,\r\n    onNodeToggle: PropTypes.func,\r\n    onAction: PropTypes.func,\r\n    onCheckboxChange: PropTypes.func,\r\n    mode: PropTypes.oneOf(['multiSelect', 'simpleSelect', 'radioSelect', 'hierarchical']),\r\n    showPartiallySelected: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    clientId: PropTypes.string,\r\n  }\r\n\r\n  getAriaAttributes = () => {\r\n    const { _children, _depth, checked, disabled, expanded, readOnly, mode, partial } = this.props\r\n    const attributes = {}\r\n\r\n    attributes.role = mode === 'simpleSelect' ? 'option' : 'treeitem'\r\n    attributes['aria-disabled'] = disabled || readOnly\r\n    attributes['aria-selected'] = checked\r\n    if (mode !== 'simpleSelect') {\r\n      attributes['aria-checked'] = partial ? 'mixed' : checked\r\n      attributes['aria-level'] = (_depth || 0) + 1\r\n      attributes['aria-expanded'] = _children && (expanded ? 'true' : 'false')\r\n    }\r\n    return attributes\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      mode,\r\n      keepTreeOnSearch,\r\n      _id,\r\n      _children,\r\n      dataset,\r\n      _depth,\r\n      expanded,\r\n      title,\r\n      label,\r\n      partial,\r\n      checked,\r\n      value,\r\n      disabled,\r\n      expandOnly,\r\n      actions,\r\n      onAction,\r\n      searchModeOn,\r\n      onNodeToggle,\r\n      onCheckboxChange,\r\n      showPartiallySelected,\r\n      readOnly,\r\n      clientId,\r\n    } = this.props\r\n    const liCx = getNodeCx(this.props)\r\n    const style = keepTreeOnSearch || !searchModeOn ? { paddingLeft: `${(_depth || 0) * 20}px` } : {}\r\n\r\n    const liId = `${_id}_li`\r\n\r\n    return (\r\n      <li className={liCx} style={style} id={liId} {...getDataset(dataset)} {...this.getAriaAttributes()}>\r\n        <Toggle isLeaf={isLeaf(_children)} expanded={expanded} id={_id} onNodeToggle={onNodeToggle} />\r\n        <NodeLabel\r\n          title={title}\r\n          label={label}\r\n          id={_id}\r\n          partial={partial}\r\n          checked={checked}\r\n          value={value}\r\n          disabled={disabled}\r\n          expandOnly={expandOnly}\r\n          mode={mode}\r\n          onCheckboxChange={!expandOnly ? onCheckboxChange : onNodeToggle}\r\n          showPartiallySelected={showPartiallySelected}\r\n          readOnly={readOnly}\r\n          clientId={clientId}\r\n        />\r\n        <Actions actions={actions} onAction={onAction} id={_id} readOnly={readOnly} />\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TreeNode\r\n","import InfiniteScroll from 'react-infinite-scroll-component'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\n\r\nimport TreeNode from '../tree-node'\r\nimport { findIndex } from '../utils'\r\n\r\nconst shouldRenderNode = (node, searchModeOn, data) => {\r\n  if (searchModeOn || node.expanded) return true\r\n\r\n  const parent = node._parent && data.get(node._parent)\r\n  // if it has a parent, then check parent's state.\r\n  // otherwise root nodes are always rendered\r\n  return !parent || parent.expanded\r\n}\r\n\r\nclass Tree extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.object,\r\n    keepTreeOnSearch: PropTypes.bool,\r\n    keepChildrenOnSearch: PropTypes.bool,\r\n    searchModeOn: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    onNodeToggle: PropTypes.func,\r\n    onAction: PropTypes.func,\r\n    onCheckboxChange: PropTypes.func,\r\n    mode: PropTypes.oneOf(['multiSelect', 'simpleSelect', 'radioSelect', 'hierarchical']),\r\n    showPartiallySelected: PropTypes.bool,\r\n    pageSize: PropTypes.number,\r\n    readOnly: PropTypes.bool,\r\n    clientId: PropTypes.string,\r\n    activeDescendant: PropTypes.string,\r\n  }\r\n\r\n  static defaultProps = {\r\n    pageSize: 100,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.currentPage = 1\r\n    this.computeInstanceProps(props, true)\r\n\r\n    this.state = {\r\n      items: this.allVisibleNodes.slice(0, this.props.pageSize),\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    const { activeDescendant } = nextProps\r\n    const hasSameActiveDescendant = activeDescendant === this.props.activeDescendant\r\n    this.computeInstanceProps(nextProps, !hasSameActiveDescendant)\r\n    this.setState({ items: this.allVisibleNodes.slice(0, this.currentPage * this.props.pageSize) }, () => {\r\n      if (hasSameActiveDescendant) return\r\n      const { scrollableTarget } = this.state\r\n      const activeLi = activeDescendant && document && document.getElementById(activeDescendant)\r\n      if (activeLi && scrollableTarget) {\r\n        scrollableTarget.scrollTop = activeLi.offsetTop - (scrollableTarget.clientHeight - activeLi.clientHeight) / 2\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ scrollableTarget: this.node.parentNode })\r\n  }\r\n\r\n  computeInstanceProps = (props, checkActiveDescendant) => {\r\n    this.allVisibleNodes = this.getNodes(props)\r\n    this.totalPages = Math.ceil(this.allVisibleNodes.length / this.props.pageSize)\r\n    if (checkActiveDescendant && props.activeDescendant) {\r\n      const currentId = props.activeDescendant.replace(/_li$/, '')\r\n      let focusIndex = findIndex(this.allVisibleNodes, n => n.key === currentId) + 1\r\n      this.currentPage = focusIndex > 0 ? Math.ceil(focusIndex / this.props.pageSize) : 1\r\n    }\r\n  }\r\n\r\n  getNodes = props => {\r\n    const {\r\n      data,\r\n      keepTreeOnSearch,\r\n      keepChildrenOnSearch,\r\n      searchModeOn,\r\n      mode,\r\n      showPartiallySelected,\r\n      readOnly,\r\n      onAction,\r\n      onChange,\r\n      onCheckboxChange,\r\n      onNodeToggle,\r\n      activeDescendant,\r\n      clientId,\r\n    } = props\r\n    const items = []\r\n    data.forEach(node => {\r\n      if (shouldRenderNode(node, searchModeOn, data)) {\r\n        items.push(\r\n          <TreeNode\r\n            keepTreeOnSearch={keepTreeOnSearch}\r\n            keepChildrenOnSearch={keepChildrenOnSearch}\r\n            key={node._id}\r\n            {...node}\r\n            searchModeOn={searchModeOn}\r\n            onChange={onChange}\r\n            onCheckboxChange={onCheckboxChange}\r\n            onNodeToggle={onNodeToggle}\r\n            onAction={onAction}\r\n            mode={mode}\r\n            showPartiallySelected={showPartiallySelected}\r\n            readOnly={readOnly}\r\n            clientId={clientId}\r\n            activeDescendant={activeDescendant}\r\n          />\r\n        )\r\n      }\r\n    })\r\n    return items\r\n  }\r\n\r\n  hasMore = () => this.currentPage < this.totalPages\r\n\r\n  loadMore = () => {\r\n    this.currentPage = this.currentPage + 1\r\n    const nextItems = this.allVisibleNodes.slice(0, this.currentPage * this.props.pageSize)\r\n    this.setState({ items: nextItems })\r\n  }\r\n\r\n  setNodeRef = node => {\r\n    this.node = node\r\n  }\r\n\r\n  getAriaAttributes = () => {\r\n    const { mode } = this.props\r\n\r\n    const attributes = {\r\n      /* https://www.w3.org/TR/wai-aria-1.1/#select\r\n       * https://www.w3.org/TR/wai-aria-1.1/#tree */\r\n      role: mode === 'simpleSelect' ? 'listbox' : 'tree',\r\n      'aria-multiselectable': /multiSelect|hierarchical/.test(mode),\r\n    }\r\n\r\n    return attributes\r\n  }\r\n\r\n  render() {\r\n    const { searchModeOn } = this.props\r\n\r\n    return (\r\n      <ul className={`root ${searchModeOn ? 'searchModeOn' : ''}`} ref={this.setNodeRef} {...this.getAriaAttributes()}>\r\n        {this.state.scrollableTarget && (\r\n          <InfiniteScroll\r\n            dataLength={this.state.items.length}\r\n            next={this.loadMore}\r\n            hasMore={this.hasMore()}\r\n            loader={<span className=\"searchLoader\">Loading...</span>}\r\n            scrollableTarget={this.state.scrollableTarget}\r\n          >\r\n            {this.state.items}\r\n          </InfiniteScroll>\r\n        )}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tree\r\n","import partial from 'array.partial'\r\n\r\nconst identity = c => c\r\n\r\nexport default (node, childProp = 'children', childSelector = identity) =>\r\n  partial(node[childProp], c => childSelector(c).checked) || node[childProp].some(c => childSelector(c).partial)\r\n","import getPartialState from './getPartialState'\r\n\r\nimport { isEmpty } from '../utils'\r\n\r\n/**\r\n * Converts a nested node into an associative array with pointers to child and parent nodes\r\n * Given:\r\n```\r\nconst tree = [\r\n  {\r\n    label: 'item1',\r\n    value: 'value1',\r\n    children: [\r\n      {\r\n        label: 'item1-1',\r\n        value: 'value1-1',\r\n        children: [\r\n          {\r\n            label: 'item1-1-1',\r\n            value: 'value1-1-1'\r\n          },\r\n          {\r\n            label: 'item1-1-2',\r\n            value: 'value1-1-2'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: 'item1-2',\r\n        value: 'value1-2'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: 'item2',\r\n    value: 'value2',\r\n    children: [\r\n      {\r\n        label: 'item2-1',\r\n        value: 'value2-1',\r\n        children: [\r\n          {\r\n            label: 'item2-1-1',\r\n            value: 'value2-1-1'\r\n          },\r\n          {\r\n            label: 'item2-1-2',\r\n            value: 'value2-1-2'\r\n          },\r\n          {\r\n            label: 'item2-1-3',\r\n            value: 'item2-1-3',\r\n            children: [\r\n              {\r\n                label: 'item2-1-3-1',\r\n                value: 'value2-1-3-1'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: 'item2-2',\r\n        value: 'value2-2'\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\n * results in\r\n```\r\n{\r\n  \"0\": {\r\n    _id: \"0\",\r\n    _parent: null,\r\n    _children: [\r\n      \"0-0\",\r\n      \"0-1\"\r\n    ],\r\n    label: \"item1\",\r\n    value: \"value1\"\r\n  },\r\n  \"1\": {\r\n    _id: \"1\",\r\n    _parent: null,\r\n    _children: [\r\n      \"1-0\",\r\n      \"1-1\"\r\n    ],\r\n    label: \"item2\",\r\n    value: \"value2\"\r\n  },\r\n  \"0-0\": {\r\n    _id: \"0-0\",\r\n    _parent: \"0\",\r\n    _children: [\r\n      \"0-0-0\",\r\n      \"0-0-1\"\r\n    ],\r\n    label: \"item1-1\",\r\n    value: \"value1-1\"\r\n  },\r\n  \"0-1\": {\r\n    _id: \"0-1\",\r\n    _parent: \"0\",\r\n    label: \"item1-2\",\r\n    value: \"value1-2\"\r\n  },\r\n  \"0-0-0\": {\r\n    _id: \"0-0-0\",\r\n    _parent: \"0-0\",\r\n    label: \"item1-1-1\",\r\n    value: \"value1-1-1\"\r\n  },\r\n  \"0-0-1\": {\r\n    _id: \"0-0-1\",\r\n    _parent: \"0-0\",\r\n    label: \"item1-1-2\",\r\n    value: \"value1-1-2\"\r\n  },\r\n  \"1-0\": {\r\n    _id: \"1-0\",\r\n    _parent: \"1\",\r\n    _children: [\r\n      \"1-0-0\",\r\n      \"1-0-1\",\r\n      \"1-0-2\"\r\n    ],\r\n    label: \"item2-1\",\r\n    value: \"value2-1\"\r\n  },\r\n  \"1-1\": {\r\n    _id: \"1-1\",\r\n    _parent: \"1\",\r\n    label: \"item2-2\",\r\n    value: \"value2-2\"\r\n  },\r\n  \"1-0-0\": {\r\n    _id: \"1-0-0\",\r\n    _parent: \"1-0\",\r\n    label: \"item2-1-1\",\r\n    value: \"value2-1-1\"\r\n  },\r\n  \"1-0-1\": {\r\n    _id: \"1-0-1\",\r\n    _parent: \"1-0\",\r\n    label: \"item2-1-2\",\r\n    value: \"value2-1-2\"\r\n  },\r\n  \"1-0-2\": {\r\n    _id: \"1-0-2\",\r\n    _parent: \"1-0\",\r\n    _children: [\r\n      \"1-0-2-0\"\r\n    ],\r\n    label: \"item2-1-3\",\r\n    value: \"value2-1-3\"\r\n  },\r\n  \"1-0-2-0\": {\r\n    _id: \"1-0-2-0\",\r\n    _parent: \"1-0-2\",\r\n    label: \"item2-1-3-1\",\r\n    value: \"value2-1-3-1\"\r\n  }\r\n}\r\n```\r\n * @param  {[type]} tree              The incoming tree object\r\n * @param  {[bool]} simple            Whether its in Single select mode (simple dropdown)\r\n * @param  {[bool]} radio             Whether its in Radio select mode (radio dropdown)\r\n * @param  {[bool]} showPartialState  Whether to show partially checked state\r\n * @param  {[string]} rootPrefixId    The prefix to use when setting root node ids\r\n * @return {object}                   The flattened list\r\n */\r\nfunction flattenTree({ tree, simple, radio, showPartialState, hierarchical, rootPrefixId }) {\r\n  const forest = Array.isArray(tree) ? tree : [tree]\r\n\r\n  // eslint-disable-next-line no-use-before-define\r\n  return walkNodes({\r\n    nodes: forest,\r\n    simple,\r\n    radio,\r\n    showPartialState,\r\n    hierarchical,\r\n    rootPrefixId,\r\n  })\r\n}\r\n\r\n/**\r\n * If the node didn't specify anything on its own\r\n * figure out the initial state based on parent\r\n * @param {object} node           [current node]\r\n * @param {object} parent         [node's immediate parent]\r\n * @param {bool}   inheritChecked [if checked should be inherited]\r\n */\r\nfunction setInitialStateProps(node, parent = {}, inheritChecked = true) {\r\n  const stateProps = inheritChecked ? ['checked', 'disabled'] : ['disabled']\r\n  for (let index = 0; index < stateProps.length; index++) {\r\n    const prop = stateProps[index]\r\n\r\n    // if and only if, node doesn't explicitly define a prop, grab it from parent\r\n    if (node[prop] === undefined && parent[prop] !== undefined) {\r\n      node[prop] = parent[prop]\r\n    }\r\n  }\r\n}\r\n\r\nfunction walkNodes({\r\n  nodes,\r\n  parent,\r\n  depth = 0,\r\n  simple,\r\n  radio,\r\n  showPartialState,\r\n  hierarchical,\r\n  rootPrefixId,\r\n  _rv = { list: new Map(), defaultValues: [], singleSelectedNode: null },\r\n}) {\r\n  const single = simple || radio\r\n  nodes.forEach((node, i) => {\r\n    node._depth = depth\r\n\r\n    if (parent) {\r\n      node._id = node.id || `${parent._id}-${i}`\r\n      node._parent = parent._id\r\n      parent._children.push(node._id)\r\n    } else {\r\n      node._id = node.id || `${rootPrefixId ? `${rootPrefixId}-${i}` : i}`\r\n    }\r\n\r\n    if (single && node.checked) {\r\n      if (_rv.singleSelectedNode) {\r\n        node.checked = false\r\n      } else {\r\n        _rv.singleSelectedNode = node\r\n      }\r\n    }\r\n\r\n    if (single && node.isDefaultValue && _rv.singleSelectedNode && !_rv.singleSelectedNode.isDefaultValue) {\r\n      // Default value has precedence, uncheck previous value\r\n      _rv.singleSelectedNode.checked = false\r\n      _rv.singleSelectedNode = null\r\n    }\r\n\r\n    if (node.isDefaultValue && (!single || _rv.defaultValues.length === 0)) {\r\n      _rv.defaultValues.push(node._id)\r\n      node.checked = true\r\n      if (single) {\r\n        _rv.singleSelectedNode = node\r\n      }\r\n    }\r\n\r\n    if (!hierarchical || radio) setInitialStateProps(node, parent, !radio)\r\n\r\n    _rv.list.set(node._id, node)\r\n    if (!simple && node.children) {\r\n      node._children = []\r\n      walkNodes({\r\n        nodes: node.children,\r\n        parent: node,\r\n        depth: depth + 1,\r\n        radio,\r\n        showPartialState,\r\n        hierarchical,\r\n        _rv,\r\n      })\r\n\r\n      if (showPartialState && !node.checked) {\r\n        node.partial = getPartialState(node)\r\n\r\n        // re-check if all children are checked. if so, check thyself\r\n        if (!single && !isEmpty(node.children) && node.children.every(c => c.checked)) {\r\n          node.checked = true\r\n        }\r\n      }\r\n\r\n      node.children = undefined\r\n    }\r\n  })\r\n\r\n  return _rv\r\n}\r\n\r\nexport default flattenTree\r\n","import { isEmpty } from '../utils'\r\n\r\nconst markSubTreeVisited = (node, visited, getItemById) => {\r\n  visited[node._id] = true\r\n  if (!isEmpty(node._children)) {\r\n    node._children.forEach(c => markSubTreeVisited(getItemById(c), visited, getItemById))\r\n  }\r\n}\r\n\r\nconst getNodesMatching = (tree, nodePredicate) => {\r\n  const nodes = []\r\n  const visited = {}\r\n\r\n  tree.forEach((node, key) => {\r\n    if (visited[key]) return\r\n\r\n    if (nodePredicate(node, key, visited)) {\r\n      nodes.push(node)\r\n    }\r\n\r\n    visited[key] = true\r\n  })\r\n\r\n  return nodes\r\n}\r\n\r\nconst getVisibleNodes = (tree, getItemById, markSubTreeOnNonExpanded) =>\r\n  getNodesMatching(tree, (node, key, visited) => {\r\n    if (markSubTreeOnNonExpanded && node._children && node._children.length && node.expanded !== true) {\r\n      markSubTreeVisited(node, visited, getItemById)\r\n    }\r\n    return !node.hide\r\n  })\r\n\r\nconst nodeVisitor = {\r\n  getNodesMatching,\r\n  getVisibleNodes,\r\n  markSubTreeVisited,\r\n}\r\nexport default nodeVisitor\r\n","import nodeVisitor from './nodeVisitor'\r\nimport { getTagId } from '../tag'\r\nimport { findIndex } from '../utils'\r\n\r\nconst Keys = {\r\n  Up: 'ArrowUp',\r\n  Down: 'ArrowDown',\r\n  Left: 'ArrowLeft',\r\n  Right: 'ArrowRight',\r\n  Enter: 'Enter',\r\n  Home: 'Home',\r\n  PageUp: 'PageUp',\r\n  End: 'End',\r\n  PageDown: 'PageDown',\r\n}\r\n\r\nexport const NavActions = {\r\n  None: 'None',\r\n  FocusPrevious: 'FocusPrevious',\r\n  FocusNext: 'FocusNext',\r\n  FocusParent: 'FocusParent',\r\n  FocusFirst: 'FocusFirst',\r\n  FocusLast: 'FocusLast',\r\n  ToggleExpanded: 'ToggleExpanded',\r\n  ToggleChecked: 'ToggleChecked',\r\n}\r\n\r\nexport const FocusActionNames = new Set([\r\n  NavActions.FocusPrevious,\r\n  NavActions.FocusNext,\r\n  NavActions.FocusParent,\r\n  NavActions.FocusFirst,\r\n  NavActions.FocusLast,\r\n])\r\n\r\nconst validTriggerOpenKeys = [Keys.Up, Keys.Down, Keys.Home, Keys.PageUp, Keys.End, Keys.PageDown]\r\nconst validKeys = validTriggerOpenKeys.concat([Keys.Left, Keys.Right, Keys.Enter])\r\n\r\nconst isValidKey = (key, isOpen) => {\r\n  const keysToCheck = isOpen ? validKeys : validTriggerOpenKeys\r\n  return keysToCheck.indexOf(key) > -1\r\n}\r\n\r\nconst isMatchingEvent = (key, keys, currentFocus, nonFocusKey) =>\r\n  keys.indexOf(key) > -1 || (!currentFocus && key === nonFocusKey)\r\n\r\nconst isFocusFirstEvent = (key, currentFocus) => isMatchingEvent(key, [Keys.Home, Keys.PageUp], currentFocus, Keys.Down)\r\n\r\nconst isFocusLastEvent = (key, currentFocus) => isMatchingEvent(key, [Keys.End, Keys.PageDown], currentFocus, Keys.Up)\r\n\r\nconst isReverseTraverseAction = action =>\r\n  isMatchingEvent(action, [NavActions.FocusPrevious, NavActions.FocusLast], true)\r\n\r\nconst isEdgeTraverseAction = action => isMatchingEvent(action, [NavActions.FocusFirst, NavActions.FocusLast], true)\r\n\r\nconst getLeftNavAction = (currentFocus, key) => {\r\n  if (!currentFocus || key !== Keys.Left) return NavActions.None\r\n\r\n  if (currentFocus.expanded === true) {\r\n    return NavActions.ToggleExpanded\r\n  }\r\n  if (currentFocus._parent) {\r\n    return NavActions.FocusParent\r\n  }\r\n\r\n  return NavActions.None\r\n}\r\n\r\nconst getRightNavAction = (currentFocus, key) => {\r\n  if (!currentFocus || !currentFocus._children || key !== Keys.Right) {\r\n    return NavActions.None\r\n  }\r\n\r\n  return currentFocus.expanded !== true ? NavActions.ToggleExpanded : NavActions.FocusNext\r\n}\r\n\r\nconst getRelativeAction = (currentFocus, key) => {\r\n  if (!currentFocus) return NavActions.None\r\n  switch (key) {\r\n    case Keys.Up:\r\n      return NavActions.FocusPrevious\r\n    case Keys.Down:\r\n      return NavActions.FocusNext\r\n    case Keys.Enter:\r\n      return NavActions.ToggleChecked\r\n    default:\r\n      return NavActions.None\r\n  }\r\n}\r\n\r\nconst getAction = (currentFocus, key) => {\r\n  let action\r\n  if (key === Keys.Left) {\r\n    action = getLeftNavAction(currentFocus, key)\r\n  } else if (key === Keys.Right) {\r\n    action = getRightNavAction(currentFocus, key)\r\n  } else if (isFocusFirstEvent(key, currentFocus)) {\r\n    action = NavActions.FocusFirst\r\n  } else if (isFocusLastEvent(key, currentFocus)) {\r\n    action = NavActions.FocusLast\r\n  } else {\r\n    action = getRelativeAction(currentFocus, key)\r\n  }\r\n  return action\r\n}\r\n\r\nconst getParentFocus = (prevFocus, getNodeById) =>\r\n  prevFocus && prevFocus._parent ? getNodeById(prevFocus._parent) : prevFocus\r\n\r\nconst getRelativeNeighborsFocus = (sortedNodes, prevFocus) => {\r\n  const nextIndex = sortedNodes.indexOf(prevFocus) + 1\r\n  if (nextIndex % sortedNodes.length === 0) {\r\n    return sortedNodes[0]\r\n  }\r\n  return sortedNodes[nextIndex]\r\n}\r\n\r\nconst getRelativeFocus = (sortedNodes, prevFocus, action) => {\r\n  if (!sortedNodes || sortedNodes.length === 0) {\r\n    return prevFocus\r\n  }\r\n\r\n  let focus = prevFocus\r\n  if (isEdgeTraverseAction(action)) {\r\n    ;[focus] = sortedNodes\r\n  } else if ([NavActions.FocusPrevious, NavActions.FocusNext].indexOf(action) > -1) {\r\n    focus = getRelativeNeighborsFocus(sortedNodes, prevFocus)\r\n  }\r\n  return focus\r\n}\r\n\r\nconst getNextFocus = (tree, prevFocus, action, getNodeById, markSubTreeOnNonExpanded) => {\r\n  if (action === NavActions.FocusParent) {\r\n    return getParentFocus(prevFocus, getNodeById)\r\n  }\r\n  if (!FocusActionNames.has(action)) {\r\n    return prevFocus\r\n  }\r\n\r\n  let nodes = nodeVisitor.getVisibleNodes(tree, getNodeById, markSubTreeOnNonExpanded)\r\n  if (isReverseTraverseAction(action)) {\r\n    nodes = nodes.reverse()\r\n  }\r\n\r\n  return getRelativeFocus(nodes, prevFocus, action)\r\n}\r\n\r\nconst getNextFocusAfterTagDelete = (deletedId, prevTags, tags, fallback) => {\r\n  // Sets new focus to next tag or returns fallback\r\n  let index = prevTags ? findIndex(prevTags, t => t._id === deletedId) : -1\r\n  if (index < 0 || !tags.length) return fallback\r\n\r\n  index = tags.length > index ? index : tags.length - 1\r\n  const newFocusId = tags[index]._id\r\n  const focusNode = document.getElementById(getTagId(newFocusId))\r\n  if (focusNode) {\r\n    return focusNode.firstElementChild || fallback\r\n  }\r\n  return fallback\r\n}\r\n\r\nconst handleFocusNavigationkey = (tree, action, prevFocus, getNodeById, markSubTreeOnNonExpanded) => {\r\n  const newFocus = keyboardNavigation.getNextFocus(tree, prevFocus, action, getNodeById, markSubTreeOnNonExpanded)\r\n  keyboardNavigation.adjustFocusedProps(prevFocus, newFocus)\r\n  if (newFocus) {\r\n    return newFocus._id\r\n  }\r\n  return prevFocus && prevFocus._id\r\n}\r\n\r\nconst adjustFocusedProps = (prevFocus, newFocus) => {\r\n  if (prevFocus && newFocus && prevFocus._id !== newFocus._id) {\r\n    prevFocus._focused = false\r\n  }\r\n  if (newFocus) {\r\n    newFocus._focused = true\r\n  }\r\n}\r\n\r\nconst handleToggleNavigationkey = (action, prevFocus, readOnly, onToggleChecked, onToggleExpanded) => {\r\n  if (action === NavActions.ToggleChecked && !readOnly && !(prevFocus.readOnly || prevFocus.disabled)) {\r\n    onToggleChecked(prevFocus._id, prevFocus.checked !== true)\r\n  } else if (action === NavActions.ToggleExpanded) {\r\n    onToggleExpanded(prevFocus._id)\r\n  }\r\n  return prevFocus && prevFocus._id\r\n}\r\n\r\nconst keyboardNavigation = {\r\n  isValidKey,\r\n  getAction,\r\n  getNextFocus,\r\n  getNextFocusAfterTagDelete,\r\n  handleFocusNavigationkey,\r\n  handleToggleNavigationkey,\r\n  adjustFocusedProps,\r\n}\r\n\r\nexport default keyboardNavigation\r\n","import getPartialState from './getPartialState'\r\nimport { isEmpty } from '../utils'\r\nimport flattenTree from './flatten-tree'\r\nimport nodeVisitor from './nodeVisitor'\r\nimport keyboardNavigation, { FocusActionNames } from './keyboardNavigation'\r\n\r\nclass TreeManager {\r\n  constructor({ data, mode, showPartiallySelected, rootPrefixId, searchPredicate }) {\r\n    this._src = data\r\n    this.simpleSelect = mode === 'simpleSelect'\r\n    this.radioSelect = mode === 'radioSelect'\r\n    this.hierarchical = mode === 'hierarchical'\r\n    this.searchPredicate = searchPredicate\r\n    const { list, defaultValues, singleSelectedNode } = flattenTree({\r\n      tree: JSON.parse(JSON.stringify(data)),\r\n      simple: this.simpleSelect,\r\n      radio: this.radioSelect,\r\n      showPartialState: showPartiallySelected,\r\n      hierarchical: this.hierarchical,\r\n      rootPrefixId,\r\n    })\r\n    this.tree = list\r\n    this.defaultValues = defaultValues\r\n    this.showPartialState = !this.hierarchical && showPartiallySelected\r\n    this.searchMaps = new Map()\r\n\r\n    if ((this.simpleSelect || this.radioSelect) && singleSelectedNode) {\r\n      // Remembers initial check on single select dropdowns\r\n      this.currentChecked = singleSelectedNode._id\r\n    }\r\n  }\r\n\r\n  getNodeById(id) {\r\n    return this.tree.get(id)\r\n  }\r\n\r\n  getMatches(searchTerm) {\r\n    if (this.searchMaps.has(searchTerm)) {\r\n      return this.searchMaps.get(searchTerm)\r\n    }\r\n\r\n    let proximity = -1\r\n    let closestMatch = searchTerm\r\n    this.searchMaps.forEach((m, key) => {\r\n      if (searchTerm.startsWith(key) && key.length > proximity) {\r\n        proximity = key.length\r\n        closestMatch = key\r\n      }\r\n    })\r\n\r\n    const matches = []\r\n\r\n    const addOnMatch = this._getAddOnMatch(matches, searchTerm)\r\n\r\n    if (closestMatch !== searchTerm) {\r\n      const superMatches = this.searchMaps.get(closestMatch)\r\n      superMatches.forEach(key => addOnMatch(this.getNodeById(key)))\r\n    } else {\r\n      this.tree.forEach(addOnMatch)\r\n    }\r\n\r\n    this.searchMaps.set(searchTerm, matches)\r\n    return matches\r\n  }\r\n\r\n  addParentsToTree(id, tree) {\r\n    if (id !== undefined) {\r\n      const node = this.getNodeById(id)\r\n      this.addParentsToTree(node._parent, tree)\r\n      node.hide = node._isMatch ? node.hide : true\r\n      node.matchInChildren = true\r\n      tree.set(id, node)\r\n    }\r\n  }\r\n\r\n  addChildrenToTree(ids, tree, matches) {\r\n    if (ids !== undefined) {\r\n      ids.forEach(id => {\r\n        if (matches && matches.includes(id)) {\r\n          // if a child is found by search anyways, don't display it as a child here\r\n          return\r\n        }\r\n        const node = this.getNodeById(id)\r\n        node.matchInParent = true\r\n        tree.set(id, node)\r\n        this.addChildrenToTree(node._children, tree)\r\n      })\r\n    }\r\n  }\r\n\r\n  filterTree(searchTerm, keepTreeOnSearch, keepChildrenOnSearch) {\r\n    const matches = this.getMatches(searchTerm.toLowerCase())\r\n\r\n    const matchTree = new Map()\r\n\r\n    matches.forEach(m => {\r\n      const node = this.getNodeById(m)\r\n      node.hide = false\r\n\r\n      // add a marker to tell `addParentsToTree` to not hide this node; even if it's an ancestor node\r\n      node._isMatch = true\r\n\r\n      if (keepTreeOnSearch) {\r\n        // add parent nodes first or else the tree won't be rendered in correct hierarchy\r\n        this.addParentsToTree(node._parent, matchTree)\r\n      }\r\n      matchTree.set(m, node)\r\n      if (keepTreeOnSearch && keepChildrenOnSearch) {\r\n        // add children nodes after a found match\r\n        this.addChildrenToTree(node._children, matchTree, matches)\r\n      }\r\n    })\r\n\r\n    const allNodesHidden = matches.length === 0\r\n\r\n    // we store a local reference so that components can use it in subsequent renders\r\n    // this is the least intrusive way of fixing #190\r\n    this.matchTree = matchTree\r\n\r\n    return { allNodesHidden, tree: matchTree }\r\n  }\r\n\r\n  restoreNodes() {\r\n    this.tree.forEach(node => {\r\n      node.hide = false\r\n    })\r\n\r\n    return this.tree\r\n  }\r\n\r\n  restoreDefaultValues() {\r\n    this.defaultValues.forEach(id => {\r\n      this.setNodeCheckedState(id, true)\r\n    })\r\n\r\n    return this.tree\r\n  }\r\n\r\n  togglePreviousChecked(id, checked) {\r\n    const prevChecked = this.currentChecked\r\n\r\n    // if id is same as previously selected node, then do nothing (since it's state is already set correctly by setNodeCheckedState)\r\n    // but if they ar not same, then toggle the previous one\r\n    if (prevChecked && prevChecked !== id) this.getNodeById(prevChecked).checked = false\r\n\r\n    this.currentChecked = checked ? id : null\r\n  }\r\n\r\n  setNodeCheckedState(id, checked) {\r\n    const node = this.getNodeById(id)\r\n    node.checked = checked\r\n\r\n    // TODO: this can probably be combined with the same check in the else block. investigate in a separate release.\r\n    if (this.showPartialState) {\r\n      node.partial = false\r\n    }\r\n\r\n    if (this.simpleSelect) {\r\n      this.togglePreviousChecked(id, checked)\r\n    } else if (this.radioSelect) {\r\n      this.togglePreviousChecked(id, checked)\r\n      if (this.showPartialState) {\r\n        this.partialCheckParents(node)\r\n      }\r\n      if (!checked) {\r\n        this.unCheckParents(node)\r\n      }\r\n    } else {\r\n      if (!this.hierarchical) this.toggleChildren(id, checked)\r\n\r\n      if (this.showPartialState) {\r\n        this.partialCheckParents(node)\r\n      }\r\n\r\n      if (!this.hierarchical && !checked) {\r\n        this.unCheckParents(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Walks up the tree unchecking parent nodes\r\n   * @param  {[type]} node [description]\r\n   * @return {[type]}      [description]\r\n   */\r\n  unCheckParents(node) {\r\n    let parent = node._parent\r\n    while (parent) {\r\n      const next = this.getNodeById(parent)\r\n      next.checked = false\r\n      next.partial = getPartialState(next, '_children', this.getNodeById.bind(this))\r\n      parent = next._parent\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Walks up the tree setting partial state on parent nodes\r\n   * @param  {[type]} node [description]\r\n   * @return {[type]}      [description]\r\n   */\r\n  partialCheckParents(node) {\r\n    let parent = node._parent\r\n    while (parent) {\r\n      const next = this.getNodeById(parent)\r\n      next.checked = next._children.every(c => this.getNodeById(c).checked)\r\n      next.partial = getPartialState(next, '_children', this.getNodeById.bind(this))\r\n      parent = next._parent\r\n    }\r\n  }\r\n\r\n  toggleChildren(id, state) {\r\n    const node = this.getNodeById(id)\r\n    node.checked = state\r\n\r\n    if (this.showPartialState) {\r\n      node.partial = false\r\n    }\r\n\r\n    if (!isEmpty(node._children)) {\r\n      node._children.forEach(id => this.toggleChildren(id, state))\r\n    }\r\n  }\r\n\r\n  toggleNodeExpandState(id) {\r\n    const node = this.getNodeById(id)\r\n    node.expanded = !node.expanded\r\n    if (!node.expanded) this.collapseChildren(node)\r\n    return this.tree\r\n  }\r\n\r\n  collapseChildren(node) {\r\n    node.expanded = false\r\n    if (!isEmpty(node._children)) {\r\n      node._children.forEach(c => this.collapseChildren(this.getNodeById(c)))\r\n    }\r\n  }\r\n\r\n  get tags() {\r\n    if (this.radioSelect || this.simpleSelect) {\r\n      if (this.currentChecked) {\r\n        return [this.getNodeById(this.currentChecked)]\r\n      }\r\n      return []\r\n    }\r\n\r\n    return nodeVisitor.getNodesMatching(this.tree, (node, key, visited) => {\r\n      if (node.checked && !this.hierarchical) {\r\n        // Parent node, so no need to walk children\r\n        nodeVisitor.markSubTreeVisited(node, visited, id => this.getNodeById(id))\r\n      }\r\n      return node.checked\r\n    })\r\n  }\r\n\r\n  getTreeAndTags() {\r\n    return { tree: this.tree, tags: this.tags }\r\n  }\r\n\r\n  handleNavigationKey(currentFocus, tree, key, readOnly, markSubTreeOnNonExpanded, onToggleChecked, onToggleExpanded) {\r\n    const prevFocus = currentFocus && this.getNodeById(currentFocus)\r\n    const getNodeById = id => this.getNodeById(id)\r\n    const action = keyboardNavigation.getAction(prevFocus, key)\r\n\r\n    if (FocusActionNames.has(action)) {\r\n      const newFocus = keyboardNavigation.handleFocusNavigationkey(\r\n        tree,\r\n        action,\r\n        prevFocus,\r\n        getNodeById,\r\n        markSubTreeOnNonExpanded\r\n      )\r\n      return newFocus\r\n    }\r\n\r\n    if (!prevFocus || !tree.has(prevFocus._id)) {\r\n      // No current focus or not visible\r\n      return currentFocus\r\n    }\r\n\r\n    return keyboardNavigation.handleToggleNavigationkey(action, prevFocus, readOnly, onToggleChecked, onToggleExpanded)\r\n  }\r\n\r\n  _getAddOnMatch(matches, searchTerm) {\r\n    let isMatch = (node, term) => node.label.toLowerCase().indexOf(term) >= 0\r\n    if (typeof this.searchPredicate === 'function') {\r\n      isMatch = this.searchPredicate\r\n    }\r\n\r\n    return node => {\r\n      if (isMatch(node, searchTerm)) {\r\n        matches.push(node._id)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default TreeManager\r\n","/*!\r\n * React Dropdown Tree Select\r\n * A lightweight, fast and highly customizable tree select component.\r\n * Hrusikesh Panda <hrusikesh.panda@dowjones.com>\r\n * Copyright (c) 2017 Dow Jones, Inc. <support@dowjones.com> (http://dowjones.com)\r\n * license MIT\r\n * see https://github.com/dowjones/react-dropdown-tree-select\r\n */\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\n\r\nimport { isOutsideClick, clientIdGenerator } from './utils'\r\nimport Input from './input'\r\nimport Tags from './tags'\r\nimport Trigger from './trigger'\r\nimport Tree from './tree'\r\nimport TreeManager from './tree-manager'\r\nimport keyboardNavigation from './tree-manager/keyboardNavigation'\r\n\r\nimport './index.css'\r\nimport { getAriaLabel } from './a11y'\r\n\r\nclass DropdownTreeSelect extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n    clearSearchOnChange: PropTypes.bool,\r\n    keepTreeOnSearch: PropTypes.bool,\r\n    keepChildrenOnSearch: PropTypes.bool,\r\n    keepOpenOnSelect: PropTypes.bool,\r\n    texts: PropTypes.shape({\r\n      placeholder: PropTypes.string,\r\n      noMatches: PropTypes.string,\r\n      label: PropTypes.string,\r\n      labelRemove: PropTypes.string,\r\n    }),\r\n    showDropdown: PropTypes.oneOf(['default', 'initial', 'always']),\r\n    className: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onAction: PropTypes.func,\r\n    onNodeToggle: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onBlur: PropTypes.func,\r\n    mode: PropTypes.oneOf(['multiSelect', 'simpleSelect', 'radioSelect', 'hierarchical']),\r\n    showPartiallySelected: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    id: PropTypes.string,\r\n    searchPredicate: PropTypes.func,\r\n    inlineSearchInput: PropTypes.bool,\r\n  }\r\n\r\n  static defaultProps = {\r\n    onFocus: () => {},\r\n    onBlur: () => {},\r\n    onChange: () => {},\r\n    texts: {},\r\n    showDropdown: 'default',\r\n    inlineSearchInput: false,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      searchModeOn: false,\r\n      currentFocus: undefined,\r\n    }\r\n    this.clientId = props.id || clientIdGenerator.get(this)\r\n\r\n  }\r\n\r\n  initNewProps = ({ data, mode, showDropdown, showPartiallySelected, searchPredicate }) => {\r\n    this.treeManager = new TreeManager({\r\n      data,\r\n      mode,\r\n      showPartiallySelected,\r\n      rootPrefixId: this.clientId,\r\n      searchPredicate,\r\n    })\r\n    // Restore focus-state\r\n    const currentFocusNode = this.state.currentFocus && this.treeManager.getNodeById(this.state.currentFocus)\r\n    if (currentFocusNode) {\r\n      currentFocusNode._focused = true\r\n    }\r\n    this.setState(prevState => ({\r\n      showDropdown: /initial|always/.test(showDropdown) || prevState.showDropdown === true,\r\n      ...this.treeManager.getTreeAndTags(),\r\n    }))\r\n  }\r\n\r\n  resetSearchState = () => {\r\n    // clear the search criteria and avoid react controlled/uncontrolled warning\r\n    // !this.props.inlineSearchInput is gated as inline search is not rendered until dropdown is shown\r\n    if (!this.props.inlineSearchInput) {\r\n      this.searchInput.value = ''\r\n    }\r\n\r\n    return {\r\n      tree: this.treeManager.restoreNodes(), // restore the tree to its pre-search state\r\n      searchModeOn: false,\r\n      allNodesHidden: false,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n  //componentDidMount(){  \r\n    this.initNewProps(this.props)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('click', this.handleOutsideClick, false)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.initNewProps(nextProps)\r\n  }\r\n\r\n  handleClick = (e, callback) => {\r\n    this.setState(prevState => {\r\n      // keep dropdown active when typing in search box\r\n      const showDropdown = this.props.showDropdown === 'always' || this.keepDropdownActive || !prevState.showDropdown\r\n\r\n      // register event listeners only if there is a state change\r\n      if (showDropdown !== prevState.showDropdown) {\r\n        if (showDropdown) {\r\n          document.addEventListener('click', this.handleOutsideClick, false)\r\n        } else {\r\n          document.removeEventListener('click', this.handleOutsideClick, false)\r\n        }\r\n      }\r\n\r\n      if (showDropdown) this.props.onFocus()\r\n      else this.props.onBlur()\r\n\r\n      return !showDropdown ? { showDropdown, ...this.resetSearchState() } : { showDropdown }\r\n    }, callback)\r\n  }\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.props.showDropdown === 'always' || !isOutsideClick(e, this.node)) {\r\n      return\r\n    }\r\n  \r\n    this.handleClick()\r\n  }\r\n\r\n  onInputChange = value => {\r\n    const { allNodesHidden, tree } = this.treeManager.filterTree(\r\n      value,\r\n      this.props.keepTreeOnSearch,\r\n      this.props.keepChildrenOnSearch\r\n    )\r\n    const searchModeOn = value.length > 0\r\n\r\n    this.setState({\r\n      tree,\r\n      searchModeOn,\r\n      allNodesHidden,\r\n    })\r\n  }\r\n\r\n  onTagRemove = (id, isKeyboardEvent) => {\r\n    const { tags: prevTags } = this.state\r\n    this.onCheckboxChange(id, false, tags => {\r\n      if (!isKeyboardEvent) return\r\n\r\n      keyboardNavigation.getNextFocusAfterTagDelete(id, prevTags, tags, this.searchInput).focus()\r\n    })\r\n  }\r\n\r\n  onNodeToggle = id => {\r\n    this.treeManager.toggleNodeExpandState(id)\r\n    const tree = this.state.searchModeOn ? this.treeManager.matchTree : this.treeManager.tree\r\n    this.setState({ tree })\r\n    typeof this.props.onNodeToggle === 'function' && this.props.onNodeToggle(this.treeManager.getNodeById(id))\r\n  }\r\n\r\n  onCheckboxChange = (id, checked, callback) => {\r\n    const { mode, keepOpenOnSelect, clearSearchOnChange } = this.props\r\n    const { currentFocus, searchModeOn } = this.state\r\n    this.treeManager.setNodeCheckedState(id, checked)\r\n    let tags = this.treeManager.tags\r\n    const isSingleSelect = ['simpleSelect', 'radioSelect'].indexOf(mode) > -1\r\n    const showDropdown = isSingleSelect && !keepOpenOnSelect ? false : this.state.showDropdown\r\n    const currentFocusNode = currentFocus && this.treeManager.getNodeById(currentFocus)\r\n    const node = this.treeManager.getNodeById(id)\r\n\r\n    if (!tags.length) {\r\n      this.treeManager.restoreDefaultValues()\r\n      tags = this.treeManager.tags\r\n    }\r\n\r\n    const tree = searchModeOn ? this.treeManager.matchTree : this.treeManager.tree\r\n    const nextState = {\r\n      tree,\r\n      tags,\r\n      showDropdown,\r\n      currentFocus: id,\r\n    }\r\n\r\n    if ((isSingleSelect && !showDropdown) || clearSearchOnChange) {\r\n      Object.assign(nextState, this.resetSearchState())\r\n    }\r\n\r\n    if (isSingleSelect && !showDropdown) {\r\n      document.removeEventListener('click', this.handleOutsideClick, false)\r\n    }\r\n\r\n    keyboardNavigation.adjustFocusedProps(currentFocusNode, node)\r\n    this.setState(nextState, () => {\r\n      callback && callback(tags)\r\n    })\r\n    this.props.onChange(node, tags)\r\n  }\r\n\r\n  onAction = (nodeId, action) => {\r\n    this.props.onAction(this.treeManager.getNodeById(nodeId), action)\r\n  }\r\n\r\n  onInputFocus = () => {\r\n    this.keepDropdownActive = true\r\n  }\r\n\r\n  onInputBlur = () => {\r\n    this.keepDropdownActive = false\r\n  }\r\n\r\n  onTrigger = e => {\r\n    this.handleClick(e, () => {\r\n      // If the dropdown is shown after key press, focus the input\r\n      if (this.state.showDropdown) {\r\n        this.searchInput.focus()\r\n      }\r\n    })\r\n  }\r\n\r\n  onCloseContent= () => {\r\n    this.handleClick()\r\n  }\r\n\r\n  onKeyboardKeyDown = e => {\r\n    const { readOnly, mode } = this.props\r\n    const { showDropdown, tags, searchModeOn, currentFocus } = this.state\r\n    const tm = this.treeManager\r\n    const tree = searchModeOn ? tm.matchTree : tm.tree\r\n\r\n    if (!showDropdown && (keyboardNavigation.isValidKey(e.key, false) || /^\\w$/i.test(e.key))) {\r\n      // Triggers open of dropdown and retriggers event\r\n      e.persist()\r\n      this.handleClick(null, () => this.onKeyboardKeyDown(e))\r\n      if (/\\w/i.test(e.key)) return\r\n    } else if (showDropdown && keyboardNavigation.isValidKey(e.key, true)) {\r\n      const newFocus = tm.handleNavigationKey(\r\n        currentFocus,\r\n        tree,\r\n        e.key,\r\n        readOnly,\r\n        !searchModeOn,\r\n        this.onCheckboxChange,\r\n        this.onNodeToggle\r\n      )\r\n      if (newFocus !== currentFocus) {\r\n        this.setState({ currentFocus: newFocus })\r\n      }\r\n    } else if (showDropdown && ['Escape', 'Tab'].indexOf(e.key) > -1) {\r\n      if (mode === 'simpleSelect' && tree.has(currentFocus)) {\r\n        this.onCheckboxChange(currentFocus, true)\r\n      } else {\r\n        // Triggers close\r\n        this.keepDropdownActive = false\r\n        this.handleClick()\r\n      }\r\n      return\r\n    } else if (e.key === 'Backspace' && tags.length && this.searchInput.value.length === 0) {\r\n      const lastTag = tags.pop()\r\n      this.onCheckboxChange(lastTag._id, false)\r\n    } else {\r\n      return\r\n    }\r\n    e.preventDefault()\r\n  }\r\n\r\n  getAriaAttributes = () => {\r\n    const { mode, texts } = this.props\r\n\r\n    if (mode !== 'radioSelect') return {}\r\n\r\n    return {\r\n      role: 'radiogroup',\r\n      ...getAriaLabel(texts.label),\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { disabled, readOnly, mode, texts, inlineSearchInput } = this.props\r\n    const { showDropdown, currentFocus, tags } = this.state\r\n\r\n    const activeDescendant = currentFocus ? `${currentFocus}_li` : undefined\r\n\r\n    const commonProps = { disabled, readOnly, activeDescendant, texts, mode, clientId: this.clientId }\r\n\r\n    const searchInput = (\r\n      <Input\r\n        inputRef={el => {\r\n          this.searchInput = el\r\n        }}\r\n        onInputChange={this.onInputChange}\r\n        onFocus={this.onInputFocus}\r\n        onBlur={this.onInputBlur}\r\n        onKeyDown={this.onKeyboardKeyDown}\r\n        {...commonProps}\r\n      />\r\n    )\r\n    return (\r\n      <div\r\n        id={this.clientId}\r\n        className={[this.props.className && this.props.className, 'react-dropdown-tree-select']\r\n          .filter(Boolean)\r\n          .join(' ')}\r\n        ref={node => {\r\n          this.node = node\r\n        }}\r\n      >\r\n        <div\r\n          className={['dropdown', mode === 'simpleSelect' && 'simple-select', mode === 'radioSelect' && 'radio-select']\r\n            .filter(Boolean)\r\n            .join(' ')}\r\n        >\r\n          <Trigger onTrigger={this.onTrigger} showDropdown={showDropdown} {...commonProps} tags={tags}>\r\n            <Tags tags={tags} onTagRemove={this.onTagRemove} {...commonProps}>\r\n              {!inlineSearchInput && searchInput}\r\n            </Tags>\r\n          </Trigger>\r\n          {showDropdown && (\r\n            <React.Fragment>\r\n            <div className=\"dropdown-content\" {...this.getAriaAttributes()}>\r\n            <div className=\"dropdownCloseButton\" onClick={this.onCloseContent}><img className=\"imgDropdownCloseButton\" src=\"/close4.png\"/></div>\r\n            \r\n              {inlineSearchInput && searchInput}\r\n              {this.state.allNodesHidden ? (\r\n                <span className=\"no-matches\">{texts.noMatches || 'No matches found'}</span>\r\n              ) : (\r\n                <Tree\r\n                  data={this.state.tree}\r\n                  keepTreeOnSearch={this.props.keepTreeOnSearch}\r\n                  keepChildrenOnSearch={this.props.keepChildrenOnSearch}\r\n                  searchModeOn={this.state.searchModeOn}\r\n                  onAction={this.onAction}\r\n                  onCheckboxChange={this.onCheckboxChange}\r\n                  onNodeToggle={this.onNodeToggle}\r\n                  mode={mode}\r\n                  showPartiallySelected={this.props.showPartiallySelected}\r\n                  {...commonProps}\r\n                />\r\n              )}\r\n              \r\n            </div>\r\n            \r\n            </React.Fragment>\r\n          )}\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DropdownTreeSelect\r\n","// Libraries\r\nimport React from \"react\";\r\nimport DropdownTreeSelect from \"./react-dropdown-tree-select/\";\r\n\r\nexport default class SelectProperties extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    handleChange = selectedOption => {\r\n        this.setState(\r\n          { selectedOption },\r\n          () => {\r\n              //console.log('Option selected:', this.state.selectedOption.value);\r\n              this.props.updateParam(this.state.selectedOption.value);\r\n          }\r\n        );\r\n    };\r\n    \r\n    render(){\r\n\r\n        const onChange = (currentNode, selectedNodes) => {\r\n            console.log('onChange::', currentNode, selectedNodes)\r\n            this.props.updateParam(currentNode.value);\r\n        }\r\n        \r\n        const onAction = (node, action) => {\r\n            console.log('onAction::', action, node)\r\n        }\r\n\r\n        const onNodeToggle = currentNode => {\r\n            console.log('onNodeToggle::', currentNode)\r\n        }\r\n        console.log('data select: ',this.props.data);\r\n        console.log('data select: ',JSON.stringify(this.props.data));\r\n        // keepTreeOnSearch  onChange={onChange} onAction={onAction} onNodeToggle={onNodeToggle}\r\n\r\n        if(this.props.items!==undefined){\r\n        return (\r\n            <div>\r\n                <div className=\"filterSelectTitle\">{this.props.text}:</div>\r\n                <DropdownTreeSelect data={this.props.items}  mode=\"radioSelect\" keepTreeOnSearch  onChange={onChange} onAction={onAction} onNodeToggle={onNodeToggle}/>\r\n            </div>\r\n        );\r\n        }else{\r\n            return (<div></div>);\r\n        }\r\n    }\r\n}\r\n\r\n// example group data: https://codesandbox.io/s/stacked-react-selects-s7l1l?file=/example.js","// Libraries\r\nimport React from \"react\";\r\nimport { groupBy} from \"lodash\";\r\nimport _ from 'lodash';\r\nimport { Redirect} from \"react-router-dom\";\r\n\r\nimport {\r\n    PopupboxManager,\r\n    PopupboxContainer\r\n} from 'react-popupbox';\r\n\r\n// CSS\r\nimport \"./reset.css\";\r\nimport \"react-popupbox/dist/react-popupbox.css\"\r\nimport \"./styles.css\";\r\n\r\n// options: http://fraina.github.io/react-popupbox/\r\n\r\n// Area components\r\nimport Groups from \"./Groups\";\r\nimport FilterList from \"./FilterList\";\r\nimport FilterListColours from \"./FilterListColours\";\r\nimport FilterForm from \"./FilterForm\";\r\nimport SelectProperties from \"./SelectProperties\";\r\n\r\n// Data & configs\r\nimport Config from \"./Config\"\r\nimport catHierarchy from \"./data/cats-hierarchy-select.json\"\r\nimport catHierarchy_simple from \"./data/cats-hierarchy-select-simple.json\"\r\nimport config_filters from \"./data/config_filters.json\"\r\nimport config_filters_simple from \"./data/config_filters_simple.json\"\r\n\r\nimport dataPAsim from \"./data/PAsim.json\";\r\nimport dataCFsim from \"./data/CFsim.json\";\r\nimport dataPA from \"./data/PA.json\";\r\nimport dataCF from \"./data/CF.json\";\r\n\r\nexport default class Area extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            param1 : Config.PARAM1,\r\n            param2 : Config.PARAM2,\r\n            update: false,\r\n            filter: \"\",\r\n            typeArea: Config.START_TYPE_AREA\r\n        };\r\n        console.log('Call constructor=========================');\r\n        console.log('mounted ');\r\n    }\r\n    \r\n    addIdPropertyToAr(ar){\r\n        var newArWithId = ar.map((x, i) => {\r\n            x.id = i + 1;\r\n            return x;\r\n        });\r\n        return newArWithId;\r\n    }\r\n\r\n    ObjToArSortedBySize(obj){ \r\n        return Object.keys(obj)\r\n        .map(function(k) {\r\n            return { key: k, value: obj[k] };\r\n        })\r\n        .sort(function(a, b) {\r\n            return b.value.length - a.value.length;\r\n        });\r\n    }\r\n\r\n    ObjToAr(obj){ \r\n        return Object.keys(obj)\r\n        .map(function(k) {\r\n            return { key: k, value: obj[k] };\r\n        })\r\n    }\r\n\r\n    // Methods from Childs\r\n    onNewFilter = (value) => {\r\n        console.log('New filter:'+value);\r\n        this.setState({filter:value});\r\n        this.update = true;\r\n    }\r\n\r\n    updateParam1 = (value) => {\r\n        this.setState({param1: value})\r\n        this.update = true;\r\n    }\r\n\r\n    updateParam2 = (value) => {\r\n        this.setState({param2: value})\r\n        this.update = true;\r\n    }\r\n\r\n    areaTypeSelect = (value) => {\r\n        console.log('areaTypeSelect : ',value);\r\n        this.setState({typeArea: value})\r\n        this.update = true;\r\n    }\r\n\r\n    getHumanFromID= (id) => {\r\n        var output = null;\r\n        try{\r\n            output =  config_filters[0][id].human\r\n        }catch(err){\r\n            output = id;\r\n            console.log(\"Error ::: looking for Human :::\", output);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    getDistincFromID= (id) => {\r\n        var output = null;\r\n        try{\r\n            output =  config_filters[0][id].distincnum\r\n        }catch(err){\r\n            output = id;\r\n            console.log(\"Error ::: looking for Distincnum :::\", output);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    createSelectJson = (type,param) => {\r\n        // Clone multidimentional array (which is tricky)\r\n        if(type.indexOf('Simple')!==-1){\r\n            // Simple JSON\r\n            var selectObj = JSON.parse(JSON.stringify(catHierarchy_simple));\r\n        }else{\r\n            // Detailed JSON\r\n            var selectObj = JSON.parse(JSON.stringify(catHierarchy.cat_hierarchy));\r\n        }\r\n        \r\n        for(let i=0;i<selectObj.length;i++){\r\n            // check if is selected\r\n            if(selectObj[i].value === param ){\r\n                //console.log('selected tag',selectObj[i].value , param);\r\n                selectObj[i].isDefaultValue = true;\r\n            }\r\n            var totalItemsLevel1 = 0;\r\n            try{\r\n                totalItemsLevel1 =selectObj[i].children.length\r\n            }catch(err){}\r\n            for(let j=0;j<totalItemsLevel1;j++){\r\n                //\r\n                if(selectObj[i].children[j].label==='' || selectObj[i].children[j].label===undefined ){\r\n                    let id =  selectObj[i].children[j].value;\r\n                    //console.log('value: ',this.getHumanFromID(id));\r\n                    if( id!==undefined && id!==\"\" ) selectObj[i].children[j].label = this.getHumanFromID(id);\r\n                    if(this.getDistincFromID(id)>Config.MAX_DISTINC) selectObj[i].children[j].hide = true;\r\n                }\r\n                if(selectObj[i].children[j].value === param ){\r\n                    //console.log('selected tag',selectObj[i].children[j].value , param)\r\n                    selectObj[i].children[j].isDefaultValue = true;\r\n                    selectObj[i].expanded = true;\r\n                }\r\n                \r\n                var totalItemsLevel2 = 0;\r\n                try{\r\n                    totalItemsLevel2 = selectObj[i].children[j].children.length\r\n                }catch(err){}\r\n\r\n                for(let h=0; h<totalItemsLevel2; h++){\r\n                    if(selectObj[i].children[j].children[h].label==='' || selectObj[i].children[j].children[h].label===undefined){\r\n                        let id =  selectObj[i].children[j].children[h].value;\r\n                        selectObj[i].children[j].children[h].label = this.getHumanFromID(id);\r\n                        if(this.getDistincFromID(id)>Config.MAX_DISTINC) selectObj[i].children[j].children[h].hide = true;\r\n                    }\r\n                    if(selectObj[i].children[j].children[h].value === param ){\r\n                        selectObj[i].children[j].children[h].isDefaultValue = true;\r\n                        selectObj[i].expanded = true;\r\n                        selectObj[i].children[j].expanded = true;\r\n                    }\r\n                }\r\n            }  \r\n        }\r\n        return selectObj;\r\n    }\r\n\r\n    \r\n    openPopupbox = (data) => {\r\n        console.log(\"openPopupbox :\",data);\r\n        console.log(\"openPopupbox :\",data['year']);\r\n        var objClean = {'Mentioned in this Agreement':''};\r\n        // clean obj with properties zero\r\n        for (const prop in data) {\r\n            if(data[prop]!==0 ){ //&& data[prop]!==1\r\n                objClean[this.getHumanFromID(prop)] = data[prop]\r\n            }\r\n            if(data[prop]===1){\r\n                objClean['Mentioned in this Agreement'] += this.getHumanFromID(prop)+',';\r\n            }\r\n        }\r\n        /*\r\n        if(objClean['Mentioned in this Agreement'] ==='' ){\r\n            delete objClean['Mentioned in this Agreement'];\r\n        }else{\r\n            objClean['Mentioned in this Agreement'] = objClean['Mentioned in this Agreement'].substring(0, objClean['Mentioned in this Agreement'].length - 1);\r\n        } \r\n        */\r\n        delete objClean.id;\r\n        delete objClean.foundFilter;\r\n        const content = (\r\n          <div>\r\n              {Object.keys(objClean).map((obj) => (\r\n                <p><span className=\"strongText\">{obj}</span> : {objClean[obj]}</p>\r\n              ))}\r\n          </div>\r\n        )\r\n        PopupboxManager.open({ content, config: {\r\n            titleBar: {\r\n              enable: true,\r\n              text: 'Detail data'\r\n            },\r\n            overlayOpacity:0,\r\n            fadeIn: true,\r\n            fadeInSpeed: 500\r\n        } })\r\n        \r\n    }\r\n    \r\n    render() {\r\n        // exemple https://codesandbox.io/s/react-router-query-parameters-mfh8p?from-embed=&file=/example.js\r\n        //let query = new URLSearchParams(useLocation().search);\r\n\r\n        var urlParam1,urlParam2,urlFilter,urlTypeArea;\r\n        try{\r\n            urlParam1   = this.props.match.params.param1;\r\n            urlParam2   = this.props.match.params.param2;\r\n            urlFilter   = this.props.match.params.filter;\r\n            urlTypeArea = this.props.match.params.typeArea;\r\n            console.log(\"===> url param:\", urlParam1, urlParam2, urlFilter); \r\n        }catch(err){console.log(\"====> url: ERROR\",this.props );}\r\n\r\n        // Config variables\r\n        const area_x = Config.AREAX;\r\n        const area_y = Config.AREAY;\r\n\r\n        // Select parameters between URL and changes\r\n        var param1 = (urlParam1!==undefined && !this.update)? urlParam1:this.state.param1;\r\n        var param2 = (urlParam2!==undefined && !this.update)? urlParam2:this.state.param2;\r\n        var filter = (urlFilter!==undefined && !this.update)? urlFilter:this.state.filter;\r\n        var typeArea = (urlTypeArea!==undefined && !this.update)? urlTypeArea:this.state.typeArea;\r\n\r\n        //var typeArea = this.state.typeArea;\r\n        this.update = false;\r\n\r\n        var data = [];\r\n        console.log(\"typeArea\",typeArea)\r\n        switch(typeArea){\r\n            case 'CF-Simple':\r\n                data = dataCFsim;\r\n                console.log('CF-Simple');\r\n                break;\r\n            case 'PA-Simple':\r\n                data = dataPAsim;\r\n                console.log('PA-Simple');\r\n                break;\r\n            case 'PA-Detailed':\r\n                data = dataPA;\r\n                console.log('PA-Detailed');\r\n                break;\r\n            case 'CF-Detailed':\r\n                data = dataCF;\r\n                console.log('CF-Detailed');\r\n                break;     \r\n            default:\r\n                data = dataCFsim;\r\n                break;\r\n        }\r\n\r\n        var selectObjParam1 = this.createSelectJson(typeArea,param1);\r\n        console.log(\"selectObjParam1\",param1,selectObjParam1);\r\n        var selectObjParam2 = this.createSelectJson(typeArea,param2);\r\n        console.log(\"selectObjParam2\",param2,selectObjParam2);\r\n        console.log(\"Current filter :\",filter);\r\n\r\n        var totalDataEntries = data.length;\r\n        console.log('Total data length: ',totalDataEntries);\r\n\r\n        // Sort by date (From older to new)\r\n        data = _.sortBy(  data, 'Dat' );\r\n        // Add id to Array\r\n        var dataWithId = this.addIdPropertyToAr(data);\r\n\r\n        // Nesting param2 from data\r\n        var groupedByParam2 = groupBy(dataWithId, param2);\r\n        // Delete property with same name as param2\r\n        try{ delete groupedByParam2[param2]; }catch(err){}\r\n        // Array for colours\r\n        var count = 0;\r\n        for (const prop in groupedByParam2) {\r\n            count = count+1;\r\n            groupedByParam2[prop] = count;\r\n        }\r\n        \r\n        // Nesting Array  output obj with array in each property of the object\r\n        var groupedByParam1 = groupBy(dataWithId, param1);\r\n        // Delete property with same name as param1\r\n        try{ delete groupedByParam1[param1]; }catch(err){}\r\n        // Sort and \r\n        var groupedByParam1SortedBySize = this.ObjToArSortedBySize(groupedByParam1);\r\n\r\n        // Sort by colour group and year\r\n        var totalFoundFilter = 0;\r\n        for(let i=0; i<groupedByParam1SortedBySize.length; i++ ){\r\n            var myObject = groupBy(groupedByParam1SortedBySize[i].value, param2);\r\n            console.log('myObject: ',myObject)\r\n\r\n            // Get object in order of object that is in menu\r\n            var myObjectSorted = {};\r\n            for (const prop in groupedByParam2) {\r\n                myObjectSorted[prop] = myObject[prop];\r\n            } \r\n            \r\n            var arSorted = this.ObjToAr(myObjectSorted);\r\n            console.log('ArSorted: ',arSorted);\r\n            var outAr = [];\r\n            for(let j=0; j<arSorted.length; j++){\r\n                var sortedAr = _.sortBy(  arSorted[j].value, 'Dat' );\r\n                // Sort for find if has filter\r\n                if(this.props.filter!==\"\" && sortedAr.length>0){\r\n                    //console.log('filter:',this.props.filter);\r\n                    console.log('sortedAr[0]: ',sortedAr)\r\n                    \r\n                    for(let k=0; k<sortedAr.length; k++){\r\n                        sortedAr[k].foundFilter = false;\r\n                        for (const prop in sortedAr[k]) {\r\n                            let value = sortedAr[k][prop];\r\n                        //Object.entries(sortedAr[k]).forEach(([key, value]) => {\r\n                            //console.log(value, typeof value)\r\n                            if(typeof value === 'string' && !(value===\"0\") && !(value===\"1\") && value.toLowerCase().indexOf(filter.toLowerCase())!==-1){ \r\n                                sortedAr[k].foundFilter = true;\r\n                                totalFoundFilter +=1;\r\n                            }\r\n                        } \r\n                        //});\r\n                    }\r\n                    \r\n                }\r\n                // add to mergeAr\r\n                outAr = outAr.concat(sortedAr);\r\n                //console.log('Sortby ArSorted: ',outAr.length, sortedAr);\r\n            }\r\n            // Obj to Ar\r\n            groupedByParam1SortedBySize[i].value = outAr;\r\n            \r\n        }\r\n        // Sort by propety name\r\n        var groupedByParam1SortedByName = _.sortBy( groupedByParam1SortedBySize, 'key' ); \r\n\r\n        // Calculate size group SVG\r\n        var totalGroups = groupedByParam1SortedByName.length; \r\n        \r\n        // Calculate Groups size\r\n        var columnsGroups = Math.ceil(Math.sqrt(totalGroups));\r\n        var fullRowsGroups = Math.floor(totalGroups / columnsGroups);\r\n        var orphansGroups = totalGroups % columnsGroups;  \r\n        var rowsGroups =  (orphansGroups === 0 ? fullRowsGroups : (fullRowsGroups+1));\r\n        var widthGroups =  (area_x/ columnsGroups)-1; // -1px for margin\r\n        var heightGroups = (area_y /rowsGroups); // reduce height if there are orphans\r\n        var textTitleSpace = 20; // important!!\r\n        // Calculate Blocks size\r\n        var groupWidth = widthGroups; \r\n        var groupHeight = heightGroups;\r\n        console.log('columnsGroups',columnsGroups,'rowsGroups',rowsGroups,'groupWidth',groupWidth,'area_x',area_x,'heightGroups',heightGroups,'area_x',area_y);\r\n\r\n        // Calculate size block rect\r\n        var maxBlocksInAGroup = groupedByParam1SortedBySize[0].value.length;\r\n\r\n        var columnsBlocks = Math.ceil(Math.sqrt(maxBlocksInAGroup));\r\n        var fullRowsBlocks = Math.floor(maxBlocksInAGroup / columnsBlocks);\r\n        var orphansBlocks = maxBlocksInAGroup % columnsBlocks;  \r\n        var rowsBlocks =  (orphansBlocks === 0 ? fullRowsBlocks : (fullRowsBlocks+1));\r\n\r\n        var widthBlocks =  Math.floor(widthGroups/ columnsBlocks);\r\n        var heightBlocks = Math.floor((heightGroups-textTitleSpace) /fullRowsBlocks); // reduce height if there are orphans\r\n        \r\n        console.log('columnsBlocks:',columnsBlocks,'rowsBlocks:  ',rowsBlocks,' :: ',maxBlocksInAGroup, '<=', rowsBlocks*columnsBlocks)\r\n        \r\n        console.log(groupedByParam2[\"Africa excl MENA\"]);\r\n        console.log(\"groupedByParam2\",groupedByParam2);\r\n        console.log(\"groupedBy:\", groupedByParam1);\r\n        console.log(\"groupedBySorted:\", groupedByParam1SortedByName);\r\n\r\n        return (\r\n            <div>\r\n                <Redirect to={'/p/'+typeArea+'/'+param1+'/'+param2+'/'+filter}/>\r\n                <div className=\"typeAreaSelect\">\r\n                    <div className={typeArea==='PA-Simple'?\"typeAreaBtSelect typeAreaBtSelected\":\"typeAreaBtSelect\"} onClick={()=>{this.areaTypeSelect('PA-Simple')}}>PA-Simple</div> \r\n                    <div className={typeArea==='PA-Detailed'?\"typeAreaBtSelect typeAreaBtSelected\":\"typeAreaBtSelect\"} onClick={()=>{this.areaTypeSelect('PA-Detailed')}}>PA-Detailed</div> \r\n                    <div className={typeArea==='CF-Simple'?\"typeAreaBtSelect typeAreaBtSelected\":\"typeAreaBtSelect\"} onClick={()=>{this.areaTypeSelect('CF-Simple')}}>CF-Simple</div> \r\n                    <div className={typeArea==='CF-Detailed'?\"typeAreaBtSelect typeAreaBtSelected\":\"typeAreaBtSelect\"} onClick={()=>{this.areaTypeSelect('CF-Detailed')}}>CF-Detailed</div>\r\n                </div>\r\n                <div className=\"descriptionArea\">\r\n                    <div>{Config.DESCRIPTION[typeArea]}</div>\r\n                </div>\r\n                <div className=\"filterArea\">\r\n                    <div className=\"filterSelect\">\r\n                        <SelectProperties updateParam={this.updateParam1} items={selectObjParam1}  text=\"Blocks\"/>\r\n                        <FilterList items={groupedByParam1} keyStr={\"Param1\"} />\r\n                    </div>\r\n                    <div className=\"filterSelect\">\r\n                        <SelectProperties updateParam={this.updateParam2} items={selectObjParam2} text=\"Colours\"/>\r\n                        <FilterListColours items={groupedByParam2} keyStr={\"Param2\"} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"filterAreaSearch\">\r\n                    <FilterForm onNewFilter={this.onNewFilter} filter={filter}/>\r\n                    <div className=\"detailInfo\"><p>{filter!==''?<span style={{color:'yellow'}}>Filter \"{filter}\" has {totalFoundFilter} documents &#124; </span>:null} Number of documents: {totalDataEntries}<br/></p></div>\r\n                </div>\r\n                <div className=\"vizArea\">\r\n                    <div className=\"groups\">\r\n                        <Groups\r\n                        items={groupedByParam1SortedBySize}\r\n                        colorAr={groupedByParam2}\r\n                        param1={param1}\r\n                        param2={param2}\r\n                        filter={filter}\r\n                        groupWidth={groupWidth}\r\n                        groupHeight={groupHeight}\r\n                        blockWidth={widthBlocks}\r\n                        blockHeight={heightBlocks}\r\n                        columnsBlocks={columnsBlocks}\r\n                        rowsBlocks={rowsBlocks}\r\n                        openPopupbox={this.openPopupbox}\r\n                        />\r\n                    </div>\r\n                    \r\n                </div>\r\n                <PopupboxContainer />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","// Import ----------------------------------------------\n// React libraries\nimport React from \"react\";\nimport {\n  BrowserRouter, Switch,Route\n} from \"react-router-dom\";\n\n// Area components\nimport Area from \"./Area\"\n\n\n\n// Data\n//import data from \"./data/data.json\";\n//import cat_filters from \"./data/config_filters.json\";\n//import cat_hierarchy from \"./data/cats-hierarchy.json\";\n\nexport default function App() {\n//<Area data={data} cat_filters={cat_filters} cat_hierarchy={cat_hierarchy} />\n  return (\n    <BrowserRouter>\n      <Switch>\n      <div className=\"Area\">\n      <Route exact path='/' component={Area}/>\n      <Route path='/p/:typeArea?/:param1?/:param2?/:filter?' component={Area}/>\n      </div>\n      </Switch>\n    </BrowserRouter>\n  );\n\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n\n/*\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n*/"],"sourceRoot":""}